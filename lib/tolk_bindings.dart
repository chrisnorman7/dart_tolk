// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Bindings for the Tolk screen reader library
class DartTolk {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  DartTolk(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  DartTolk.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void __va_start(
    ffi.Pointer<ffi.Pointer<ffi.Int8>> arg0,
  ) {
    return ___va_start(
      arg0,
    );
  }

  late final ___va_start_ptr =
      _lookup<ffi.NativeFunction<_c___va_start>>('__va_start');
  late final _dart___va_start ___va_start =
      ___va_start_ptr.asFunction<_dart___va_start>();

  void __security_init_cookie() {
    return ___security_init_cookie();
  }

  late final ___security_init_cookie_ptr =
      _lookup<ffi.NativeFunction<_c___security_init_cookie>>(
          '__security_init_cookie');
  late final _dart___security_init_cookie ___security_init_cookie =
      ___security_init_cookie_ptr.asFunction<_dart___security_init_cookie>();

  void __security_check_cookie(
    int _StackCookie,
  ) {
    return ___security_check_cookie(
      _StackCookie,
    );
  }

  late final ___security_check_cookie_ptr =
      _lookup<ffi.NativeFunction<_c___security_check_cookie>>(
          '__security_check_cookie');
  late final _dart___security_check_cookie ___security_check_cookie =
      ___security_check_cookie_ptr.asFunction<_dart___security_check_cookie>();

  void __report_gsfailure(
    int _StackCookie,
  ) {
    return ___report_gsfailure(
      _StackCookie,
    );
  }

  late final ___report_gsfailure_ptr =
      _lookup<ffi.NativeFunction<_c___report_gsfailure>>('__report_gsfailure');
  late final _dart___report_gsfailure ___report_gsfailure =
      ___report_gsfailure_ptr.asFunction<_dart___report_gsfailure>();

  late final ffi.Pointer<ffi.Uint64> ___security_cookie =
      _lookup<ffi.Uint64>('__security_cookie');

  int get __security_cookie => ___security_cookie.value;

  set __security_cookie(int value) => ___security_cookie.value = value;

  void _invalid_parameter_noinfo() {
    return __invalid_parameter_noinfo();
  }

  late final __invalid_parameter_noinfo_ptr =
      _lookup<ffi.NativeFunction<_c__invalid_parameter_noinfo>>(
          '_invalid_parameter_noinfo');
  late final _dart__invalid_parameter_noinfo __invalid_parameter_noinfo =
      __invalid_parameter_noinfo_ptr
          .asFunction<_dart__invalid_parameter_noinfo>();

  void _invalid_parameter_noinfo_noreturn() {
    return __invalid_parameter_noinfo_noreturn();
  }

  late final __invalid_parameter_noinfo_noreturn_ptr =
      _lookup<ffi.NativeFunction<_c__invalid_parameter_noinfo_noreturn>>(
          '_invalid_parameter_noinfo_noreturn');
  late final _dart__invalid_parameter_noinfo_noreturn
      __invalid_parameter_noinfo_noreturn =
      __invalid_parameter_noinfo_noreturn_ptr
          .asFunction<_dart__invalid_parameter_noinfo_noreturn>();

  void _invoke_watson(
    ffi.Pointer<ffi.Uint16> _Expression,
    ffi.Pointer<ffi.Uint16> _FunctionName,
    ffi.Pointer<ffi.Uint16> _FileName,
    int _LineNo,
    int _Reserved,
  ) {
    return __invoke_watson(
      _Expression,
      _FunctionName,
      _FileName,
      _LineNo,
      _Reserved,
    );
  }

  late final __invoke_watson_ptr =
      _lookup<ffi.NativeFunction<_c__invoke_watson>>('_invoke_watson');
  late final _dart__invoke_watson __invoke_watson =
      __invoke_watson_ptr.asFunction<_dart__invoke_watson>();

  ffi.Pointer<ffi.Int32> _errno() {
    return __errno();
  }

  late final __errno_ptr = _lookup<ffi.NativeFunction<_c__errno>>('_errno');
  late final _dart__errno __errno = __errno_ptr.asFunction<_dart__errno>();

  int _set_errno(
    int _Value,
  ) {
    return __set_errno(
      _Value,
    );
  }

  late final __set_errno_ptr =
      _lookup<ffi.NativeFunction<_c__set_errno>>('_set_errno');
  late final _dart__set_errno __set_errno =
      __set_errno_ptr.asFunction<_dart__set_errno>();

  int _get_errno(
    ffi.Pointer<ffi.Int32> _Value,
  ) {
    return __get_errno(
      _Value,
    );
  }

  late final __get_errno_ptr =
      _lookup<ffi.NativeFunction<_c__get_errno>>('_get_errno');
  late final _dart__get_errno __get_errno =
      __get_errno_ptr.asFunction<_dart__get_errno>();

  ffi.Pointer<ffi.Uint64> __doserrno() {
    return ___doserrno();
  }

  late final ___doserrno_ptr =
      _lookup<ffi.NativeFunction<_c___doserrno>>('__doserrno');
  late final _dart___doserrno ___doserrno =
      ___doserrno_ptr.asFunction<_dart___doserrno>();

  int _set_doserrno(
    int _Value,
  ) {
    return __set_doserrno(
      _Value,
    );
  }

  late final __set_doserrno_ptr =
      _lookup<ffi.NativeFunction<_c__set_doserrno>>('_set_doserrno');
  late final _dart__set_doserrno __set_doserrno =
      __set_doserrno_ptr.asFunction<_dart__set_doserrno>();

  int _get_doserrno(
    ffi.Pointer<ffi.Uint64> _Value,
  ) {
    return __get_doserrno(
      _Value,
    );
  }

  late final __get_doserrno_ptr =
      _lookup<ffi.NativeFunction<_c__get_doserrno>>('_get_doserrno');
  late final _dart__get_doserrno __get_doserrno =
      __get_doserrno_ptr.asFunction<_dart__get_doserrno>();

  ffi.Pointer<ffi.Void> memchr(
    ffi.Pointer<ffi.Void> _Buf,
    int _Val,
    int _MaxCount,
  ) {
    return _memchr(
      _Buf,
      _Val,
      _MaxCount,
    );
  }

  late final _memchr_ptr = _lookup<ffi.NativeFunction<_c_memchr>>('memchr');
  late final _dart_memchr _memchr = _memchr_ptr.asFunction<_dart_memchr>();

  int memcmp(
    ffi.Pointer<ffi.Void> _Buf1,
    ffi.Pointer<ffi.Void> _Buf2,
    int _Size,
  ) {
    return _memcmp(
      _Buf1,
      _Buf2,
      _Size,
    );
  }

  late final _memcmp_ptr = _lookup<ffi.NativeFunction<_c_memcmp>>('memcmp');
  late final _dart_memcmp _memcmp = _memcmp_ptr.asFunction<_dart_memcmp>();

  ffi.Pointer<ffi.Void> memcpy(
    ffi.Pointer<ffi.Void> _Dst,
    ffi.Pointer<ffi.Void> _Src,
    int _Size,
  ) {
    return _memcpy(
      _Dst,
      _Src,
      _Size,
    );
  }

  late final _memcpy_ptr = _lookup<ffi.NativeFunction<_c_memcpy>>('memcpy');
  late final _dart_memcpy _memcpy = _memcpy_ptr.asFunction<_dart_memcpy>();

  ffi.Pointer<ffi.Void> memmove(
    ffi.Pointer<ffi.Void> _Dst,
    ffi.Pointer<ffi.Void> _Src,
    int _Size,
  ) {
    return _memmove(
      _Dst,
      _Src,
      _Size,
    );
  }

  late final _memmove_ptr = _lookup<ffi.NativeFunction<_c_memmove>>('memmove');
  late final _dart_memmove _memmove = _memmove_ptr.asFunction<_dart_memmove>();

  ffi.Pointer<ffi.Void> memset(
    ffi.Pointer<ffi.Void> _Dst,
    int _Val,
    int _Size,
  ) {
    return _memset(
      _Dst,
      _Val,
      _Size,
    );
  }

  late final _memset_ptr = _lookup<ffi.NativeFunction<_c_memset>>('memset');
  late final _dart_memset _memset = _memset_ptr.asFunction<_dart_memset>();

  ffi.Pointer<ffi.Int8> strchr(
    ffi.Pointer<ffi.Int8> _Str,
    int _Val,
  ) {
    return _strchr(
      _Str,
      _Val,
    );
  }

  late final _strchr_ptr = _lookup<ffi.NativeFunction<_c_strchr>>('strchr');
  late final _dart_strchr _strchr = _strchr_ptr.asFunction<_dart_strchr>();

  ffi.Pointer<ffi.Int8> strrchr(
    ffi.Pointer<ffi.Int8> _Str,
    int _Ch,
  ) {
    return _strrchr(
      _Str,
      _Ch,
    );
  }

  late final _strrchr_ptr = _lookup<ffi.NativeFunction<_c_strrchr>>('strrchr');
  late final _dart_strrchr _strrchr = _strrchr_ptr.asFunction<_dart_strrchr>();

  ffi.Pointer<ffi.Int8> strstr(
    ffi.Pointer<ffi.Int8> _Str,
    ffi.Pointer<ffi.Int8> _SubStr,
  ) {
    return _strstr(
      _Str,
      _SubStr,
    );
  }

  late final _strstr_ptr = _lookup<ffi.NativeFunction<_c_strstr>>('strstr');
  late final _dart_strstr _strstr = _strstr_ptr.asFunction<_dart_strstr>();

  ffi.Pointer<ffi.Uint16> wcschr(
    ffi.Pointer<ffi.Uint16> _Str,
    int _Ch,
  ) {
    return _wcschr(
      _Str,
      _Ch,
    );
  }

  late final _wcschr_ptr = _lookup<ffi.NativeFunction<_c_wcschr>>('wcschr');
  late final _dart_wcschr _wcschr = _wcschr_ptr.asFunction<_dart_wcschr>();

  ffi.Pointer<ffi.Uint16> wcsrchr(
    ffi.Pointer<ffi.Uint16> _Str,
    int _Ch,
  ) {
    return _wcsrchr(
      _Str,
      _Ch,
    );
  }

  late final _wcsrchr_ptr = _lookup<ffi.NativeFunction<_c_wcsrchr>>('wcsrchr');
  late final _dart_wcsrchr _wcsrchr = _wcsrchr_ptr.asFunction<_dart_wcsrchr>();

  ffi.Pointer<ffi.Uint16> wcsstr(
    ffi.Pointer<ffi.Uint16> _Str,
    ffi.Pointer<ffi.Uint16> _SubStr,
  ) {
    return _wcsstr(
      _Str,
      _SubStr,
    );
  }

  late final _wcsstr_ptr = _lookup<ffi.NativeFunction<_c_wcsstr>>('wcsstr');
  late final _dart_wcsstr _wcsstr = _wcsstr_ptr.asFunction<_dart_wcsstr>();

  int _cgetws_s(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    ffi.Pointer<ffi.Uint64> _SizeRead,
  ) {
    return __cgetws_s(
      _Buffer,
      _BufferCount,
      _SizeRead,
    );
  }

  late final __cgetws_s_ptr =
      _lookup<ffi.NativeFunction<_c__cgetws_s>>('_cgetws_s');
  late final _dart__cgetws_s __cgetws_s =
      __cgetws_s_ptr.asFunction<_dart__cgetws_s>();

  int _cputws(
    ffi.Pointer<ffi.Uint16> _Buffer,
  ) {
    return __cputws(
      _Buffer,
    );
  }

  late final __cputws_ptr = _lookup<ffi.NativeFunction<_c__cputws>>('_cputws');
  late final _dart__cputws __cputws = __cputws_ptr.asFunction<_dart__cputws>();

  int _getwch() {
    return __getwch();
  }

  late final __getwch_ptr = _lookup<ffi.NativeFunction<_c__getwch>>('_getwch');
  late final _dart__getwch __getwch = __getwch_ptr.asFunction<_dart__getwch>();

  int _getwche() {
    return __getwche();
  }

  late final __getwche_ptr =
      _lookup<ffi.NativeFunction<_c__getwche>>('_getwche');
  late final _dart__getwche __getwche =
      __getwche_ptr.asFunction<_dart__getwche>();

  int _putwch(
    int _Character,
  ) {
    return __putwch(
      _Character,
    );
  }

  late final __putwch_ptr = _lookup<ffi.NativeFunction<_c__putwch>>('_putwch');
  late final _dart__putwch __putwch = __putwch_ptr.asFunction<_dart__putwch>();

  int _ungetwch(
    int _Character,
  ) {
    return __ungetwch(
      _Character,
    );
  }

  late final __ungetwch_ptr =
      _lookup<ffi.NativeFunction<_c__ungetwch>>('_ungetwch');
  late final _dart__ungetwch __ungetwch =
      __ungetwch_ptr.asFunction<_dart__ungetwch>();

  int _getwch_nolock() {
    return __getwch_nolock();
  }

  late final __getwch_nolock_ptr =
      _lookup<ffi.NativeFunction<_c__getwch_nolock>>('_getwch_nolock');
  late final _dart__getwch_nolock __getwch_nolock =
      __getwch_nolock_ptr.asFunction<_dart__getwch_nolock>();

  int _getwche_nolock() {
    return __getwche_nolock();
  }

  late final __getwche_nolock_ptr =
      _lookup<ffi.NativeFunction<_c__getwche_nolock>>('_getwche_nolock');
  late final _dart__getwche_nolock __getwche_nolock =
      __getwche_nolock_ptr.asFunction<_dart__getwche_nolock>();

  int _putwch_nolock(
    int _Character,
  ) {
    return __putwch_nolock(
      _Character,
    );
  }

  late final __putwch_nolock_ptr =
      _lookup<ffi.NativeFunction<_c__putwch_nolock>>('_putwch_nolock');
  late final _dart__putwch_nolock __putwch_nolock =
      __putwch_nolock_ptr.asFunction<_dart__putwch_nolock>();

  int _ungetwch_nolock(
    int _Character,
  ) {
    return __ungetwch_nolock(
      _Character,
    );
  }

  late final __ungetwch_nolock_ptr =
      _lookup<ffi.NativeFunction<_c__ungetwch_nolock>>('_ungetwch_nolock');
  late final _dart__ungetwch_nolock __ungetwch_nolock =
      __ungetwch_nolock_ptr.asFunction<_dart__ungetwch_nolock>();

  int __conio_common_vcwprintf(
    int _Options,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<__crt_locale_pointers> _Locale,
    ffi.Pointer<ffi.Int8> _ArgList,
  ) {
    return ___conio_common_vcwprintf(
      _Options,
      _Format,
      _Locale,
      _ArgList,
    );
  }

  late final ___conio_common_vcwprintf_ptr =
      _lookup<ffi.NativeFunction<_c___conio_common_vcwprintf>>(
          '__conio_common_vcwprintf');
  late final _dart___conio_common_vcwprintf ___conio_common_vcwprintf =
      ___conio_common_vcwprintf_ptr
          .asFunction<_dart___conio_common_vcwprintf>();

  int __conio_common_vcwprintf_s(
    int _Options,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<__crt_locale_pointers> _Locale,
    ffi.Pointer<ffi.Int8> _ArgList,
  ) {
    return ___conio_common_vcwprintf_s(
      _Options,
      _Format,
      _Locale,
      _ArgList,
    );
  }

  late final ___conio_common_vcwprintf_s_ptr =
      _lookup<ffi.NativeFunction<_c___conio_common_vcwprintf_s>>(
          '__conio_common_vcwprintf_s');
  late final _dart___conio_common_vcwprintf_s ___conio_common_vcwprintf_s =
      ___conio_common_vcwprintf_s_ptr
          .asFunction<_dart___conio_common_vcwprintf_s>();

  int __conio_common_vcwprintf_p(
    int _Options,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<__crt_locale_pointers> _Locale,
    ffi.Pointer<ffi.Int8> _ArgList,
  ) {
    return ___conio_common_vcwprintf_p(
      _Options,
      _Format,
      _Locale,
      _ArgList,
    );
  }

  late final ___conio_common_vcwprintf_p_ptr =
      _lookup<ffi.NativeFunction<_c___conio_common_vcwprintf_p>>(
          '__conio_common_vcwprintf_p');
  late final _dart___conio_common_vcwprintf_p ___conio_common_vcwprintf_p =
      ___conio_common_vcwprintf_p_ptr
          .asFunction<_dart___conio_common_vcwprintf_p>();

  int __conio_common_vcwscanf(
    int _Options,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<__crt_locale_pointers> _Locale,
    ffi.Pointer<ffi.Int8> _ArgList,
  ) {
    return ___conio_common_vcwscanf(
      _Options,
      _Format,
      _Locale,
      _ArgList,
    );
  }

  late final ___conio_common_vcwscanf_ptr =
      _lookup<ffi.NativeFunction<_c___conio_common_vcwscanf>>(
          '__conio_common_vcwscanf');
  late final _dart___conio_common_vcwscanf ___conio_common_vcwscanf =
      ___conio_common_vcwscanf_ptr.asFunction<_dart___conio_common_vcwscanf>();

  ffi.Pointer<ffi.Uint16> __pctype_func() {
    return ___pctype_func();
  }

  late final ___pctype_func_ptr =
      _lookup<ffi.NativeFunction<_c___pctype_func>>('__pctype_func');
  late final _dart___pctype_func ___pctype_func =
      ___pctype_func_ptr.asFunction<_dart___pctype_func>();

  ffi.Pointer<ffi.Uint16> __pwctype_func() {
    return ___pwctype_func();
  }

  late final ___pwctype_func_ptr =
      _lookup<ffi.NativeFunction<_c___pwctype_func>>('__pwctype_func');
  late final _dart___pwctype_func ___pwctype_func =
      ___pwctype_func_ptr.asFunction<_dart___pwctype_func>();

  int iswalnum(
    int _C,
  ) {
    return _iswalnum(
      _C,
    );
  }

  late final _iswalnum_ptr =
      _lookup<ffi.NativeFunction<_c_iswalnum>>('iswalnum');
  late final _dart_iswalnum _iswalnum =
      _iswalnum_ptr.asFunction<_dart_iswalnum>();

  int iswalpha(
    int _C,
  ) {
    return _iswalpha(
      _C,
    );
  }

  late final _iswalpha_ptr =
      _lookup<ffi.NativeFunction<_c_iswalpha>>('iswalpha');
  late final _dart_iswalpha _iswalpha =
      _iswalpha_ptr.asFunction<_dart_iswalpha>();

  int iswascii(
    int _C,
  ) {
    return _iswascii(
      _C,
    );
  }

  late final _iswascii_ptr =
      _lookup<ffi.NativeFunction<_c_iswascii>>('iswascii');
  late final _dart_iswascii _iswascii =
      _iswascii_ptr.asFunction<_dart_iswascii>();

  int iswblank(
    int _C,
  ) {
    return _iswblank(
      _C,
    );
  }

  late final _iswblank_ptr =
      _lookup<ffi.NativeFunction<_c_iswblank>>('iswblank');
  late final _dart_iswblank _iswblank =
      _iswblank_ptr.asFunction<_dart_iswblank>();

  int iswcntrl(
    int _C,
  ) {
    return _iswcntrl(
      _C,
    );
  }

  late final _iswcntrl_ptr =
      _lookup<ffi.NativeFunction<_c_iswcntrl>>('iswcntrl');
  late final _dart_iswcntrl _iswcntrl =
      _iswcntrl_ptr.asFunction<_dart_iswcntrl>();

  int iswdigit(
    int _C,
  ) {
    return _iswdigit(
      _C,
    );
  }

  late final _iswdigit_ptr =
      _lookup<ffi.NativeFunction<_c_iswdigit>>('iswdigit');
  late final _dart_iswdigit _iswdigit =
      _iswdigit_ptr.asFunction<_dart_iswdigit>();

  int iswgraph(
    int _C,
  ) {
    return _iswgraph(
      _C,
    );
  }

  late final _iswgraph_ptr =
      _lookup<ffi.NativeFunction<_c_iswgraph>>('iswgraph');
  late final _dart_iswgraph _iswgraph =
      _iswgraph_ptr.asFunction<_dart_iswgraph>();

  int iswlower(
    int _C,
  ) {
    return _iswlower(
      _C,
    );
  }

  late final _iswlower_ptr =
      _lookup<ffi.NativeFunction<_c_iswlower>>('iswlower');
  late final _dart_iswlower _iswlower =
      _iswlower_ptr.asFunction<_dart_iswlower>();

  int iswprint(
    int _C,
  ) {
    return _iswprint(
      _C,
    );
  }

  late final _iswprint_ptr =
      _lookup<ffi.NativeFunction<_c_iswprint>>('iswprint');
  late final _dart_iswprint _iswprint =
      _iswprint_ptr.asFunction<_dart_iswprint>();

  int iswpunct(
    int _C,
  ) {
    return _iswpunct(
      _C,
    );
  }

  late final _iswpunct_ptr =
      _lookup<ffi.NativeFunction<_c_iswpunct>>('iswpunct');
  late final _dart_iswpunct _iswpunct =
      _iswpunct_ptr.asFunction<_dart_iswpunct>();

  int iswspace(
    int _C,
  ) {
    return _iswspace(
      _C,
    );
  }

  late final _iswspace_ptr =
      _lookup<ffi.NativeFunction<_c_iswspace>>('iswspace');
  late final _dart_iswspace _iswspace =
      _iswspace_ptr.asFunction<_dart_iswspace>();

  int iswupper(
    int _C,
  ) {
    return _iswupper(
      _C,
    );
  }

  late final _iswupper_ptr =
      _lookup<ffi.NativeFunction<_c_iswupper>>('iswupper');
  late final _dart_iswupper _iswupper =
      _iswupper_ptr.asFunction<_dart_iswupper>();

  int iswxdigit(
    int _C,
  ) {
    return _iswxdigit(
      _C,
    );
  }

  late final _iswxdigit_ptr =
      _lookup<ffi.NativeFunction<_c_iswxdigit>>('iswxdigit');
  late final _dart_iswxdigit _iswxdigit =
      _iswxdigit_ptr.asFunction<_dart_iswxdigit>();

  int __iswcsymf(
    int _C,
  ) {
    return ___iswcsymf(
      _C,
    );
  }

  late final ___iswcsymf_ptr =
      _lookup<ffi.NativeFunction<_c___iswcsymf>>('__iswcsymf');
  late final _dart___iswcsymf ___iswcsymf =
      ___iswcsymf_ptr.asFunction<_dart___iswcsymf>();

  int __iswcsym(
    int _C,
  ) {
    return ___iswcsym(
      _C,
    );
  }

  late final ___iswcsym_ptr =
      _lookup<ffi.NativeFunction<_c___iswcsym>>('__iswcsym');
  late final _dart___iswcsym ___iswcsym =
      ___iswcsym_ptr.asFunction<_dart___iswcsym>();

  int _iswalnum_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswalnum_l(
      _C,
      _Locale,
    );
  }

  late final __iswalnum_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswalnum_l>>('_iswalnum_l');
  late final _dart__iswalnum_l __iswalnum_l =
      __iswalnum_l_ptr.asFunction<_dart__iswalnum_l>();

  int _iswalpha_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswalpha_l(
      _C,
      _Locale,
    );
  }

  late final __iswalpha_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswalpha_l>>('_iswalpha_l');
  late final _dart__iswalpha_l __iswalpha_l =
      __iswalpha_l_ptr.asFunction<_dart__iswalpha_l>();

  int _iswblank_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswblank_l(
      _C,
      _Locale,
    );
  }

  late final __iswblank_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswblank_l>>('_iswblank_l');
  late final _dart__iswblank_l __iswblank_l =
      __iswblank_l_ptr.asFunction<_dart__iswblank_l>();

  int _iswcntrl_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswcntrl_l(
      _C,
      _Locale,
    );
  }

  late final __iswcntrl_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswcntrl_l>>('_iswcntrl_l');
  late final _dart__iswcntrl_l __iswcntrl_l =
      __iswcntrl_l_ptr.asFunction<_dart__iswcntrl_l>();

  int _iswdigit_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswdigit_l(
      _C,
      _Locale,
    );
  }

  late final __iswdigit_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswdigit_l>>('_iswdigit_l');
  late final _dart__iswdigit_l __iswdigit_l =
      __iswdigit_l_ptr.asFunction<_dart__iswdigit_l>();

  int _iswgraph_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswgraph_l(
      _C,
      _Locale,
    );
  }

  late final __iswgraph_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswgraph_l>>('_iswgraph_l');
  late final _dart__iswgraph_l __iswgraph_l =
      __iswgraph_l_ptr.asFunction<_dart__iswgraph_l>();

  int _iswlower_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswlower_l(
      _C,
      _Locale,
    );
  }

  late final __iswlower_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswlower_l>>('_iswlower_l');
  late final _dart__iswlower_l __iswlower_l =
      __iswlower_l_ptr.asFunction<_dart__iswlower_l>();

  int _iswprint_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswprint_l(
      _C,
      _Locale,
    );
  }

  late final __iswprint_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswprint_l>>('_iswprint_l');
  late final _dart__iswprint_l __iswprint_l =
      __iswprint_l_ptr.asFunction<_dart__iswprint_l>();

  int _iswpunct_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswpunct_l(
      _C,
      _Locale,
    );
  }

  late final __iswpunct_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswpunct_l>>('_iswpunct_l');
  late final _dart__iswpunct_l __iswpunct_l =
      __iswpunct_l_ptr.asFunction<_dart__iswpunct_l>();

  int _iswspace_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswspace_l(
      _C,
      _Locale,
    );
  }

  late final __iswspace_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswspace_l>>('_iswspace_l');
  late final _dart__iswspace_l __iswspace_l =
      __iswspace_l_ptr.asFunction<_dart__iswspace_l>();

  int _iswupper_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswupper_l(
      _C,
      _Locale,
    );
  }

  late final __iswupper_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswupper_l>>('_iswupper_l');
  late final _dart__iswupper_l __iswupper_l =
      __iswupper_l_ptr.asFunction<_dart__iswupper_l>();

  int _iswxdigit_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswxdigit_l(
      _C,
      _Locale,
    );
  }

  late final __iswxdigit_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswxdigit_l>>('_iswxdigit_l');
  late final _dart__iswxdigit_l __iswxdigit_l =
      __iswxdigit_l_ptr.asFunction<_dart__iswxdigit_l>();

  int _iswcsymf_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswcsymf_l(
      _C,
      _Locale,
    );
  }

  late final __iswcsymf_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswcsymf_l>>('_iswcsymf_l');
  late final _dart__iswcsymf_l __iswcsymf_l =
      __iswcsymf_l_ptr.asFunction<_dart__iswcsymf_l>();

  int _iswcsym_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswcsym_l(
      _C,
      _Locale,
    );
  }

  late final __iswcsym_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswcsym_l>>('_iswcsym_l');
  late final _dart__iswcsym_l __iswcsym_l =
      __iswcsym_l_ptr.asFunction<_dart__iswcsym_l>();

  int towupper(
    int _C,
  ) {
    return _towupper(
      _C,
    );
  }

  late final _towupper_ptr =
      _lookup<ffi.NativeFunction<_c_towupper>>('towupper');
  late final _dart_towupper _towupper =
      _towupper_ptr.asFunction<_dart_towupper>();

  int towlower(
    int _C,
  ) {
    return _towlower(
      _C,
    );
  }

  late final _towlower_ptr =
      _lookup<ffi.NativeFunction<_c_towlower>>('towlower');
  late final _dart_towlower _towlower =
      _towlower_ptr.asFunction<_dart_towlower>();

  int iswctype(
    int _C,
    int _Type,
  ) {
    return _iswctype(
      _C,
      _Type,
    );
  }

  late final _iswctype_ptr =
      _lookup<ffi.NativeFunction<_c_iswctype>>('iswctype');
  late final _dart_iswctype _iswctype =
      _iswctype_ptr.asFunction<_dart_iswctype>();

  int _towupper_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __towupper_l(
      _C,
      _Locale,
    );
  }

  late final __towupper_l_ptr =
      _lookup<ffi.NativeFunction<_c__towupper_l>>('_towupper_l');
  late final _dart__towupper_l __towupper_l =
      __towupper_l_ptr.asFunction<_dart__towupper_l>();

  int _towlower_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __towlower_l(
      _C,
      _Locale,
    );
  }

  late final __towlower_l_ptr =
      _lookup<ffi.NativeFunction<_c__towlower_l>>('_towlower_l');
  late final _dart__towlower_l __towlower_l =
      __towlower_l_ptr.asFunction<_dart__towlower_l>();

  int _iswctype_l(
    int _C,
    int _Type,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __iswctype_l(
      _C,
      _Type,
      _Locale,
    );
  }

  late final __iswctype_l_ptr =
      _lookup<ffi.NativeFunction<_c__iswctype_l>>('_iswctype_l');
  late final _dart__iswctype_l __iswctype_l =
      __iswctype_l_ptr.asFunction<_dart__iswctype_l>();

  int isleadbyte(
    int _C,
  ) {
    return _isleadbyte(
      _C,
    );
  }

  late final _isleadbyte_ptr =
      _lookup<ffi.NativeFunction<_c_isleadbyte>>('isleadbyte');
  late final _dart_isleadbyte _isleadbyte =
      _isleadbyte_ptr.asFunction<_dart_isleadbyte>();

  int _isleadbyte_l(
    int _C,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __isleadbyte_l(
      _C,
      _Locale,
    );
  }

  late final __isleadbyte_l_ptr =
      _lookup<ffi.NativeFunction<_c__isleadbyte_l>>('_isleadbyte_l');
  late final _dart__isleadbyte_l __isleadbyte_l =
      __isleadbyte_l_ptr.asFunction<_dart__isleadbyte_l>();

  int is_wctype(
    int _C,
    int _Type,
  ) {
    return _is_wctype(
      _C,
      _Type,
    );
  }

  late final _is_wctype_ptr =
      _lookup<ffi.NativeFunction<_c_is_wctype>>('is_wctype');
  late final _dart_is_wctype _is_wctype =
      _is_wctype_ptr.asFunction<_dart_is_wctype>();

  ffi.Pointer<ffi.Uint16> _wgetcwd(
    ffi.Pointer<ffi.Uint16> _DstBuf,
    int _SizeInWords,
  ) {
    return __wgetcwd(
      _DstBuf,
      _SizeInWords,
    );
  }

  late final __wgetcwd_ptr =
      _lookup<ffi.NativeFunction<_c__wgetcwd>>('_wgetcwd');
  late final _dart__wgetcwd __wgetcwd =
      __wgetcwd_ptr.asFunction<_dart__wgetcwd>();

  ffi.Pointer<ffi.Uint16> _wgetdcwd(
    int _Drive,
    ffi.Pointer<ffi.Uint16> _DstBuf,
    int _SizeInWords,
  ) {
    return __wgetdcwd(
      _Drive,
      _DstBuf,
      _SizeInWords,
    );
  }

  late final __wgetdcwd_ptr =
      _lookup<ffi.NativeFunction<_c__wgetdcwd>>('_wgetdcwd');
  late final _dart__wgetdcwd __wgetdcwd =
      __wgetdcwd_ptr.asFunction<_dart__wgetdcwd>();

  int _wchdir(
    ffi.Pointer<ffi.Uint16> _Path,
  ) {
    return __wchdir(
      _Path,
    );
  }

  late final __wchdir_ptr = _lookup<ffi.NativeFunction<_c__wchdir>>('_wchdir');
  late final _dart__wchdir __wchdir = __wchdir_ptr.asFunction<_dart__wchdir>();

  int _wmkdir(
    ffi.Pointer<ffi.Uint16> _Path,
  ) {
    return __wmkdir(
      _Path,
    );
  }

  late final __wmkdir_ptr = _lookup<ffi.NativeFunction<_c__wmkdir>>('_wmkdir');
  late final _dart__wmkdir __wmkdir = __wmkdir_ptr.asFunction<_dart__wmkdir>();

  int _wrmdir(
    ffi.Pointer<ffi.Uint16> _Path,
  ) {
    return __wrmdir(
      _Path,
    );
  }

  late final __wrmdir_ptr = _lookup<ffi.NativeFunction<_c__wrmdir>>('_wrmdir');
  late final _dart__wrmdir __wrmdir = __wrmdir_ptr.asFunction<_dart__wrmdir>();

  int _waccess(
    ffi.Pointer<ffi.Uint16> _FileName,
    int _AccessMode,
  ) {
    return __waccess(
      _FileName,
      _AccessMode,
    );
  }

  late final __waccess_ptr =
      _lookup<ffi.NativeFunction<_c__waccess>>('_waccess');
  late final _dart__waccess __waccess =
      __waccess_ptr.asFunction<_dart__waccess>();

  int _waccess_s(
    ffi.Pointer<ffi.Uint16> _FileName,
    int _AccessMode,
  ) {
    return __waccess_s(
      _FileName,
      _AccessMode,
    );
  }

  late final __waccess_s_ptr =
      _lookup<ffi.NativeFunction<_c__waccess_s>>('_waccess_s');
  late final _dart__waccess_s __waccess_s =
      __waccess_s_ptr.asFunction<_dart__waccess_s>();

  int _wchmod(
    ffi.Pointer<ffi.Uint16> _FileName,
    int _Mode,
  ) {
    return __wchmod(
      _FileName,
      _Mode,
    );
  }

  late final __wchmod_ptr = _lookup<ffi.NativeFunction<_c__wchmod>>('_wchmod');
  late final _dart__wchmod __wchmod = __wchmod_ptr.asFunction<_dart__wchmod>();

  int _wcreat(
    ffi.Pointer<ffi.Uint16> _FileName,
    int _PermissionMode,
  ) {
    return __wcreat(
      _FileName,
      _PermissionMode,
    );
  }

  late final __wcreat_ptr = _lookup<ffi.NativeFunction<_c__wcreat>>('_wcreat');
  late final _dart__wcreat __wcreat = __wcreat_ptr.asFunction<_dart__wcreat>();

  int _wfindfirst32(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<_wfinddata32_t> _FindData,
  ) {
    return __wfindfirst32(
      _FileName,
      _FindData,
    );
  }

  late final __wfindfirst32_ptr =
      _lookup<ffi.NativeFunction<_c__wfindfirst32>>('_wfindfirst32');
  late final _dart__wfindfirst32 __wfindfirst32 =
      __wfindfirst32_ptr.asFunction<_dart__wfindfirst32>();

  int _wfindnext32(
    int _FindHandle,
    ffi.Pointer<_wfinddata32_t> _FindData,
  ) {
    return __wfindnext32(
      _FindHandle,
      _FindData,
    );
  }

  late final __wfindnext32_ptr =
      _lookup<ffi.NativeFunction<_c__wfindnext32>>('_wfindnext32');
  late final _dart__wfindnext32 __wfindnext32 =
      __wfindnext32_ptr.asFunction<_dart__wfindnext32>();

  int _wunlink(
    ffi.Pointer<ffi.Uint16> _FileName,
  ) {
    return __wunlink(
      _FileName,
    );
  }

  late final __wunlink_ptr =
      _lookup<ffi.NativeFunction<_c__wunlink>>('_wunlink');
  late final _dart__wunlink __wunlink =
      __wunlink_ptr.asFunction<_dart__wunlink>();

  int _wrename(
    ffi.Pointer<ffi.Uint16> _OldFileName,
    ffi.Pointer<ffi.Uint16> _NewFileName,
  ) {
    return __wrename(
      _OldFileName,
      _NewFileName,
    );
  }

  late final __wrename_ptr =
      _lookup<ffi.NativeFunction<_c__wrename>>('_wrename');
  late final _dart__wrename __wrename =
      __wrename_ptr.asFunction<_dart__wrename>();

  int _wmktemp_s(
    ffi.Pointer<ffi.Uint16> _TemplateName,
    int _SizeInWords,
  ) {
    return __wmktemp_s(
      _TemplateName,
      _SizeInWords,
    );
  }

  late final __wmktemp_s_ptr =
      _lookup<ffi.NativeFunction<_c__wmktemp_s>>('_wmktemp_s');
  late final _dart__wmktemp_s __wmktemp_s =
      __wmktemp_s_ptr.asFunction<_dart__wmktemp_s>();

  ffi.Pointer<ffi.Uint16> _wmktemp(
    ffi.Pointer<ffi.Uint16> _TemplateName,
  ) {
    return __wmktemp(
      _TemplateName,
    );
  }

  late final __wmktemp_ptr =
      _lookup<ffi.NativeFunction<_c__wmktemp>>('_wmktemp');
  late final _dart__wmktemp __wmktemp =
      __wmktemp_ptr.asFunction<_dart__wmktemp>();

  int _wfindfirst32i64(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<_wfinddata32i64_t> _FindData,
  ) {
    return __wfindfirst32i64(
      _FileName,
      _FindData,
    );
  }

  late final __wfindfirst32i64_ptr =
      _lookup<ffi.NativeFunction<_c__wfindfirst32i64>>('_wfindfirst32i64');
  late final _dart__wfindfirst32i64 __wfindfirst32i64 =
      __wfindfirst32i64_ptr.asFunction<_dart__wfindfirst32i64>();

  int _wfindfirst64i32(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<_wfinddata64i32_t> _FindData,
  ) {
    return __wfindfirst64i32(
      _FileName,
      _FindData,
    );
  }

  late final __wfindfirst64i32_ptr =
      _lookup<ffi.NativeFunction<_c__wfindfirst64i32>>('_wfindfirst64i32');
  late final _dart__wfindfirst64i32 __wfindfirst64i32 =
      __wfindfirst64i32_ptr.asFunction<_dart__wfindfirst64i32>();

  int _wfindfirst64(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<_wfinddata64_t> _FindData,
  ) {
    return __wfindfirst64(
      _FileName,
      _FindData,
    );
  }

  late final __wfindfirst64_ptr =
      _lookup<ffi.NativeFunction<_c__wfindfirst64>>('_wfindfirst64');
  late final _dart__wfindfirst64 __wfindfirst64 =
      __wfindfirst64_ptr.asFunction<_dart__wfindfirst64>();

  int _wfindnext32i64(
    int _FindHandle,
    ffi.Pointer<_wfinddata32i64_t> _FindData,
  ) {
    return __wfindnext32i64(
      _FindHandle,
      _FindData,
    );
  }

  late final __wfindnext32i64_ptr =
      _lookup<ffi.NativeFunction<_c__wfindnext32i64>>('_wfindnext32i64');
  late final _dart__wfindnext32i64 __wfindnext32i64 =
      __wfindnext32i64_ptr.asFunction<_dart__wfindnext32i64>();

  int _wfindnext64i32(
    int _FindHandle,
    ffi.Pointer<_wfinddata64i32_t> _FindData,
  ) {
    return __wfindnext64i32(
      _FindHandle,
      _FindData,
    );
  }

  late final __wfindnext64i32_ptr =
      _lookup<ffi.NativeFunction<_c__wfindnext64i32>>('_wfindnext64i32');
  late final _dart__wfindnext64i32 __wfindnext64i32 =
      __wfindnext64i32_ptr.asFunction<_dart__wfindnext64i32>();

  int _wfindnext64(
    int _FindHandle,
    ffi.Pointer<_wfinddata64_t> _FindData,
  ) {
    return __wfindnext64(
      _FindHandle,
      _FindData,
    );
  }

  late final __wfindnext64_ptr =
      _lookup<ffi.NativeFunction<_c__wfindnext64>>('_wfindnext64');
  late final _dart__wfindnext64 __wfindnext64 =
      __wfindnext64_ptr.asFunction<_dart__wfindnext64>();

  int _wsopen_s(
    ffi.Pointer<ffi.Int32> _FileHandle,
    ffi.Pointer<ffi.Uint16> _FileName,
    int _OpenFlag,
    int _ShareFlag,
    int _PermissionFlag,
  ) {
    return __wsopen_s(
      _FileHandle,
      _FileName,
      _OpenFlag,
      _ShareFlag,
      _PermissionFlag,
    );
  }

  late final __wsopen_s_ptr =
      _lookup<ffi.NativeFunction<_c__wsopen_s>>('_wsopen_s');
  late final _dart__wsopen_s __wsopen_s =
      __wsopen_s_ptr.asFunction<_dart__wsopen_s>();

  int _wsopen_dispatch(
    ffi.Pointer<ffi.Uint16> _FileName,
    int _OFlag,
    int _ShFlag,
    int _PMode,
    ffi.Pointer<ffi.Int32> _PFileHandle,
    int _BSecure,
  ) {
    return __wsopen_dispatch(
      _FileName,
      _OFlag,
      _ShFlag,
      _PMode,
      _PFileHandle,
      _BSecure,
    );
  }

  late final __wsopen_dispatch_ptr =
      _lookup<ffi.NativeFunction<_c__wsopen_dispatch>>('_wsopen_dispatch');
  late final _dart__wsopen_dispatch __wsopen_dispatch =
      __wsopen_dispatch_ptr.asFunction<_dart__wsopen_dispatch>();

  int _wopen(
    ffi.Pointer<ffi.Uint16> _FileName,
    int _OpenFlag,
  ) {
    return __wopen(
      _FileName,
      _OpenFlag,
    );
  }

  late final __wopen_ptr = _lookup<ffi.NativeFunction<_c__wopen>>('_wopen');
  late final _dart__wopen __wopen = __wopen_ptr.asFunction<_dart__wopen>();

  int _wsopen(
    ffi.Pointer<ffi.Uint16> _FileName,
    int _OpenFlag,
    int _ShareFlag,
  ) {
    return __wsopen(
      _FileName,
      _OpenFlag,
      _ShareFlag,
    );
  }

  late final __wsopen_ptr = _lookup<ffi.NativeFunction<_c__wsopen>>('_wsopen');
  late final _dart__wsopen __wsopen = __wsopen_ptr.asFunction<_dart__wsopen>();

  int _wexecl(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Uint16> _ArgList,
  ) {
    return __wexecl(
      _FileName,
      _ArgList,
    );
  }

  late final __wexecl_ptr = _lookup<ffi.NativeFunction<_c__wexecl>>('_wexecl');
  late final _dart__wexecl __wexecl = __wexecl_ptr.asFunction<_dart__wexecl>();

  int _wexecle(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Uint16> _ArgList,
  ) {
    return __wexecle(
      _FileName,
      _ArgList,
    );
  }

  late final __wexecle_ptr =
      _lookup<ffi.NativeFunction<_c__wexecle>>('_wexecle');
  late final _dart__wexecle __wexecle =
      __wexecle_ptr.asFunction<_dart__wexecle>();

  int _wexeclp(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Uint16> _ArgList,
  ) {
    return __wexeclp(
      _FileName,
      _ArgList,
    );
  }

  late final __wexeclp_ptr =
      _lookup<ffi.NativeFunction<_c__wexeclp>>('_wexeclp');
  late final _dart__wexeclp __wexeclp =
      __wexeclp_ptr.asFunction<_dart__wexeclp>();

  int _wexeclpe(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Uint16> _ArgList,
  ) {
    return __wexeclpe(
      _FileName,
      _ArgList,
    );
  }

  late final __wexeclpe_ptr =
      _lookup<ffi.NativeFunction<_c__wexeclpe>>('_wexeclpe');
  late final _dart__wexeclpe __wexeclpe =
      __wexeclpe_ptr.asFunction<_dart__wexeclpe>();

  int _wexecv(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
  ) {
    return __wexecv(
      _FileName,
      _ArgList,
    );
  }

  late final __wexecv_ptr = _lookup<ffi.NativeFunction<_c__wexecv>>('_wexecv');
  late final _dart__wexecv __wexecv = __wexecv_ptr.asFunction<_dart__wexecv>();

  int _wexecve(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Env,
  ) {
    return __wexecve(
      _FileName,
      _ArgList,
      _Env,
    );
  }

  late final __wexecve_ptr =
      _lookup<ffi.NativeFunction<_c__wexecve>>('_wexecve');
  late final _dart__wexecve __wexecve =
      __wexecve_ptr.asFunction<_dart__wexecve>();

  int _wexecvp(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
  ) {
    return __wexecvp(
      _FileName,
      _ArgList,
    );
  }

  late final __wexecvp_ptr =
      _lookup<ffi.NativeFunction<_c__wexecvp>>('_wexecvp');
  late final _dart__wexecvp __wexecvp =
      __wexecvp_ptr.asFunction<_dart__wexecvp>();

  int _wexecvpe(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Env,
  ) {
    return __wexecvpe(
      _FileName,
      _ArgList,
      _Env,
    );
  }

  late final __wexecvpe_ptr =
      _lookup<ffi.NativeFunction<_c__wexecvpe>>('_wexecvpe');
  late final _dart__wexecvpe __wexecvpe =
      __wexecvpe_ptr.asFunction<_dart__wexecvpe>();

  int _wspawnl(
    int _Mode,
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Uint16> _ArgList,
  ) {
    return __wspawnl(
      _Mode,
      _FileName,
      _ArgList,
    );
  }

  late final __wspawnl_ptr =
      _lookup<ffi.NativeFunction<_c__wspawnl>>('_wspawnl');
  late final _dart__wspawnl __wspawnl =
      __wspawnl_ptr.asFunction<_dart__wspawnl>();

  int _wspawnle(
    int _Mode,
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Uint16> _ArgList,
  ) {
    return __wspawnle(
      _Mode,
      _FileName,
      _ArgList,
    );
  }

  late final __wspawnle_ptr =
      _lookup<ffi.NativeFunction<_c__wspawnle>>('_wspawnle');
  late final _dart__wspawnle __wspawnle =
      __wspawnle_ptr.asFunction<_dart__wspawnle>();

  int _wspawnlp(
    int _Mode,
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Uint16> _ArgList,
  ) {
    return __wspawnlp(
      _Mode,
      _FileName,
      _ArgList,
    );
  }

  late final __wspawnlp_ptr =
      _lookup<ffi.NativeFunction<_c__wspawnlp>>('_wspawnlp');
  late final _dart__wspawnlp __wspawnlp =
      __wspawnlp_ptr.asFunction<_dart__wspawnlp>();

  int _wspawnlpe(
    int _Mode,
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Uint16> _ArgList,
  ) {
    return __wspawnlpe(
      _Mode,
      _FileName,
      _ArgList,
    );
  }

  late final __wspawnlpe_ptr =
      _lookup<ffi.NativeFunction<_c__wspawnlpe>>('_wspawnlpe');
  late final _dart__wspawnlpe __wspawnlpe =
      __wspawnlpe_ptr.asFunction<_dart__wspawnlpe>();

  int _wspawnv(
    int _Mode,
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
  ) {
    return __wspawnv(
      _Mode,
      _FileName,
      _ArgList,
    );
  }

  late final __wspawnv_ptr =
      _lookup<ffi.NativeFunction<_c__wspawnv>>('_wspawnv');
  late final _dart__wspawnv __wspawnv =
      __wspawnv_ptr.asFunction<_dart__wspawnv>();

  int _wspawnve(
    int _Mode,
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Env,
  ) {
    return __wspawnve(
      _Mode,
      _FileName,
      _ArgList,
      _Env,
    );
  }

  late final __wspawnve_ptr =
      _lookup<ffi.NativeFunction<_c__wspawnve>>('_wspawnve');
  late final _dart__wspawnve __wspawnve =
      __wspawnve_ptr.asFunction<_dart__wspawnve>();

  int _wspawnvp(
    int _Mode,
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
  ) {
    return __wspawnvp(
      _Mode,
      _FileName,
      _ArgList,
    );
  }

  late final __wspawnvp_ptr =
      _lookup<ffi.NativeFunction<_c__wspawnvp>>('_wspawnvp');
  late final _dart__wspawnvp __wspawnvp =
      __wspawnvp_ptr.asFunction<_dart__wspawnvp>();

  int _wspawnvpe(
    int _Mode,
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Env,
  ) {
    return __wspawnvpe(
      _Mode,
      _FileName,
      _ArgList,
      _Env,
    );
  }

  late final __wspawnvpe_ptr =
      _lookup<ffi.NativeFunction<_c__wspawnvpe>>('_wspawnvpe');
  late final _dart__wspawnvpe __wspawnvpe =
      __wspawnvpe_ptr.asFunction<_dart__wspawnvpe>();

  int _wsystem(
    ffi.Pointer<ffi.Uint16> _Command,
  ) {
    return __wsystem(
      _Command,
    );
  }

  late final __wsystem_ptr =
      _lookup<ffi.NativeFunction<_c__wsystem>>('_wsystem');
  late final _dart__wsystem __wsystem =
      __wsystem_ptr.asFunction<_dart__wsystem>();

  ffi.Pointer<FILE> __acrt_iob_func(
    int _Ix,
  ) {
    return ___acrt_iob_func(
      _Ix,
    );
  }

  late final ___acrt_iob_func_ptr =
      _lookup<ffi.NativeFunction<_c___acrt_iob_func>>('__acrt_iob_func');
  late final _dart___acrt_iob_func ___acrt_iob_func =
      ___acrt_iob_func_ptr.asFunction<_dart___acrt_iob_func>();

  int fgetwc(
    ffi.Pointer<FILE> _Stream,
  ) {
    return _fgetwc(
      _Stream,
    );
  }

  late final _fgetwc_ptr = _lookup<ffi.NativeFunction<_c_fgetwc>>('fgetwc');
  late final _dart_fgetwc _fgetwc = _fgetwc_ptr.asFunction<_dart_fgetwc>();

  int _fgetwchar() {
    return __fgetwchar();
  }

  late final __fgetwchar_ptr =
      _lookup<ffi.NativeFunction<_c__fgetwchar>>('_fgetwchar');
  late final _dart__fgetwchar __fgetwchar =
      __fgetwchar_ptr.asFunction<_dart__fgetwchar>();

  int fputwc(
    int _Character,
    ffi.Pointer<FILE> _Stream,
  ) {
    return _fputwc(
      _Character,
      _Stream,
    );
  }

  late final _fputwc_ptr = _lookup<ffi.NativeFunction<_c_fputwc>>('fputwc');
  late final _dart_fputwc _fputwc = _fputwc_ptr.asFunction<_dart_fputwc>();

  int _fputwchar(
    int _Character,
  ) {
    return __fputwchar(
      _Character,
    );
  }

  late final __fputwchar_ptr =
      _lookup<ffi.NativeFunction<_c__fputwchar>>('_fputwchar');
  late final _dart__fputwchar __fputwchar =
      __fputwchar_ptr.asFunction<_dart__fputwchar>();

  int getwc(
    ffi.Pointer<FILE> _Stream,
  ) {
    return _getwc(
      _Stream,
    );
  }

  late final _getwc_ptr = _lookup<ffi.NativeFunction<_c_getwc>>('getwc');
  late final _dart_getwc _getwc = _getwc_ptr.asFunction<_dart_getwc>();

  int getwchar() {
    return _getwchar();
  }

  late final _getwchar_ptr =
      _lookup<ffi.NativeFunction<_c_getwchar>>('getwchar');
  late final _dart_getwchar _getwchar =
      _getwchar_ptr.asFunction<_dart_getwchar>();

  ffi.Pointer<ffi.Uint16> fgetws(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    ffi.Pointer<FILE> _Stream,
  ) {
    return _fgetws(
      _Buffer,
      _BufferCount,
      _Stream,
    );
  }

  late final _fgetws_ptr = _lookup<ffi.NativeFunction<_c_fgetws>>('fgetws');
  late final _dart_fgetws _fgetws = _fgetws_ptr.asFunction<_dart_fgetws>();

  int fputws(
    ffi.Pointer<ffi.Uint16> _Buffer,
    ffi.Pointer<FILE> _Stream,
  ) {
    return _fputws(
      _Buffer,
      _Stream,
    );
  }

  late final _fputws_ptr = _lookup<ffi.NativeFunction<_c_fputws>>('fputws');
  late final _dart_fputws _fputws = _fputws_ptr.asFunction<_dart_fputws>();

  ffi.Pointer<ffi.Uint16> _getws_s(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
  ) {
    return __getws_s(
      _Buffer,
      _BufferCount,
    );
  }

  late final __getws_s_ptr =
      _lookup<ffi.NativeFunction<_c__getws_s>>('_getws_s');
  late final _dart__getws_s __getws_s =
      __getws_s_ptr.asFunction<_dart__getws_s>();

  int putwc(
    int _Character,
    ffi.Pointer<FILE> _Stream,
  ) {
    return _putwc(
      _Character,
      _Stream,
    );
  }

  late final _putwc_ptr = _lookup<ffi.NativeFunction<_c_putwc>>('putwc');
  late final _dart_putwc _putwc = _putwc_ptr.asFunction<_dart_putwc>();

  int putwchar(
    int _Character,
  ) {
    return _putwchar(
      _Character,
    );
  }

  late final _putwchar_ptr =
      _lookup<ffi.NativeFunction<_c_putwchar>>('putwchar');
  late final _dart_putwchar _putwchar =
      _putwchar_ptr.asFunction<_dart_putwchar>();

  int _putws(
    ffi.Pointer<ffi.Uint16> _Buffer,
  ) {
    return __putws(
      _Buffer,
    );
  }

  late final __putws_ptr = _lookup<ffi.NativeFunction<_c__putws>>('_putws');
  late final _dart__putws __putws = __putws_ptr.asFunction<_dart__putws>();

  int ungetwc(
    int _Character,
    ffi.Pointer<FILE> _Stream,
  ) {
    return _ungetwc(
      _Character,
      _Stream,
    );
  }

  late final _ungetwc_ptr = _lookup<ffi.NativeFunction<_c_ungetwc>>('ungetwc');
  late final _dart_ungetwc _ungetwc = _ungetwc_ptr.asFunction<_dart_ungetwc>();

  ffi.Pointer<FILE> _wfdopen(
    int _FileHandle,
    ffi.Pointer<ffi.Uint16> _Mode,
  ) {
    return __wfdopen(
      _FileHandle,
      _Mode,
    );
  }

  late final __wfdopen_ptr =
      _lookup<ffi.NativeFunction<_c__wfdopen>>('_wfdopen');
  late final _dart__wfdopen __wfdopen =
      __wfdopen_ptr.asFunction<_dart__wfdopen>();

  ffi.Pointer<FILE> _wfopen(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Uint16> _Mode,
  ) {
    return __wfopen(
      _FileName,
      _Mode,
    );
  }

  late final __wfopen_ptr = _lookup<ffi.NativeFunction<_c__wfopen>>('_wfopen');
  late final _dart__wfopen __wfopen = __wfopen_ptr.asFunction<_dart__wfopen>();

  int _wfopen_s(
    ffi.Pointer<ffi.Pointer<FILE>> _Stream,
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Uint16> _Mode,
  ) {
    return __wfopen_s(
      _Stream,
      _FileName,
      _Mode,
    );
  }

  late final __wfopen_s_ptr =
      _lookup<ffi.NativeFunction<_c__wfopen_s>>('_wfopen_s');
  late final _dart__wfopen_s __wfopen_s =
      __wfopen_s_ptr.asFunction<_dart__wfopen_s>();

  ffi.Pointer<FILE> _wfreopen(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Uint16> _Mode,
    ffi.Pointer<FILE> _OldStream,
  ) {
    return __wfreopen(
      _FileName,
      _Mode,
      _OldStream,
    );
  }

  late final __wfreopen_ptr =
      _lookup<ffi.NativeFunction<_c__wfreopen>>('_wfreopen');
  late final _dart__wfreopen __wfreopen =
      __wfreopen_ptr.asFunction<_dart__wfreopen>();

  int _wfreopen_s(
    ffi.Pointer<ffi.Pointer<FILE>> _Stream,
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Uint16> _Mode,
    ffi.Pointer<FILE> _OldStream,
  ) {
    return __wfreopen_s(
      _Stream,
      _FileName,
      _Mode,
      _OldStream,
    );
  }

  late final __wfreopen_s_ptr =
      _lookup<ffi.NativeFunction<_c__wfreopen_s>>('_wfreopen_s');
  late final _dart__wfreopen_s __wfreopen_s =
      __wfreopen_s_ptr.asFunction<_dart__wfreopen_s>();

  ffi.Pointer<FILE> _wfsopen(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<ffi.Uint16> _Mode,
    int _ShFlag,
  ) {
    return __wfsopen(
      _FileName,
      _Mode,
      _ShFlag,
    );
  }

  late final __wfsopen_ptr =
      _lookup<ffi.NativeFunction<_c__wfsopen>>('_wfsopen');
  late final _dart__wfsopen __wfsopen =
      __wfsopen_ptr.asFunction<_dart__wfsopen>();

  void _wperror(
    ffi.Pointer<ffi.Uint16> _ErrorMessage,
  ) {
    return __wperror(
      _ErrorMessage,
    );
  }

  late final __wperror_ptr =
      _lookup<ffi.NativeFunction<_c__wperror>>('_wperror');
  late final _dart__wperror __wperror =
      __wperror_ptr.asFunction<_dart__wperror>();

  ffi.Pointer<FILE> _wpopen(
    ffi.Pointer<ffi.Uint16> _Command,
    ffi.Pointer<ffi.Uint16> _Mode,
  ) {
    return __wpopen(
      _Command,
      _Mode,
    );
  }

  late final __wpopen_ptr = _lookup<ffi.NativeFunction<_c__wpopen>>('_wpopen');
  late final _dart__wpopen __wpopen = __wpopen_ptr.asFunction<_dart__wpopen>();

  int _wremove(
    ffi.Pointer<ffi.Uint16> _FileName,
  ) {
    return __wremove(
      _FileName,
    );
  }

  late final __wremove_ptr =
      _lookup<ffi.NativeFunction<_c__wremove>>('_wremove');
  late final _dart__wremove __wremove =
      __wremove_ptr.asFunction<_dart__wremove>();

  ffi.Pointer<ffi.Uint16> _wtempnam(
    ffi.Pointer<ffi.Uint16> _Directory,
    ffi.Pointer<ffi.Uint16> _FilePrefix,
  ) {
    return __wtempnam(
      _Directory,
      _FilePrefix,
    );
  }

  late final __wtempnam_ptr =
      _lookup<ffi.NativeFunction<_c__wtempnam>>('_wtempnam');
  late final _dart__wtempnam __wtempnam =
      __wtempnam_ptr.asFunction<_dart__wtempnam>();

  int _wtmpnam_s(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
  ) {
    return __wtmpnam_s(
      _Buffer,
      _BufferCount,
    );
  }

  late final __wtmpnam_s_ptr =
      _lookup<ffi.NativeFunction<_c__wtmpnam_s>>('_wtmpnam_s');
  late final _dart__wtmpnam_s __wtmpnam_s =
      __wtmpnam_s_ptr.asFunction<_dart__wtmpnam_s>();

  ffi.Pointer<ffi.Uint16> _wtmpnam(
    ffi.Pointer<ffi.Uint16> _Buffer,
  ) {
    return __wtmpnam(
      _Buffer,
    );
  }

  late final __wtmpnam_ptr =
      _lookup<ffi.NativeFunction<_c__wtmpnam>>('_wtmpnam');
  late final _dart__wtmpnam __wtmpnam =
      __wtmpnam_ptr.asFunction<_dart__wtmpnam>();

  int _fgetwc_nolock(
    ffi.Pointer<FILE> _Stream,
  ) {
    return __fgetwc_nolock(
      _Stream,
    );
  }

  late final __fgetwc_nolock_ptr =
      _lookup<ffi.NativeFunction<_c__fgetwc_nolock>>('_fgetwc_nolock');
  late final _dart__fgetwc_nolock __fgetwc_nolock =
      __fgetwc_nolock_ptr.asFunction<_dart__fgetwc_nolock>();

  int _fputwc_nolock(
    int _Character,
    ffi.Pointer<FILE> _Stream,
  ) {
    return __fputwc_nolock(
      _Character,
      _Stream,
    );
  }

  late final __fputwc_nolock_ptr =
      _lookup<ffi.NativeFunction<_c__fputwc_nolock>>('_fputwc_nolock');
  late final _dart__fputwc_nolock __fputwc_nolock =
      __fputwc_nolock_ptr.asFunction<_dart__fputwc_nolock>();

  int _getwc_nolock(
    ffi.Pointer<FILE> _Stream,
  ) {
    return __getwc_nolock(
      _Stream,
    );
  }

  late final __getwc_nolock_ptr =
      _lookup<ffi.NativeFunction<_c__getwc_nolock>>('_getwc_nolock');
  late final _dart__getwc_nolock __getwc_nolock =
      __getwc_nolock_ptr.asFunction<_dart__getwc_nolock>();

  int _putwc_nolock(
    int _Character,
    ffi.Pointer<FILE> _Stream,
  ) {
    return __putwc_nolock(
      _Character,
      _Stream,
    );
  }

  late final __putwc_nolock_ptr =
      _lookup<ffi.NativeFunction<_c__putwc_nolock>>('_putwc_nolock');
  late final _dart__putwc_nolock __putwc_nolock =
      __putwc_nolock_ptr.asFunction<_dart__putwc_nolock>();

  int _ungetwc_nolock(
    int _Character,
    ffi.Pointer<FILE> _Stream,
  ) {
    return __ungetwc_nolock(
      _Character,
      _Stream,
    );
  }

  late final __ungetwc_nolock_ptr =
      _lookup<ffi.NativeFunction<_c__ungetwc_nolock>>('_ungetwc_nolock');
  late final _dart__ungetwc_nolock __ungetwc_nolock =
      __ungetwc_nolock_ptr.asFunction<_dart__ungetwc_nolock>();

  int __stdio_common_vfwprintf(
    int _Options,
    ffi.Pointer<FILE> _Stream,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<__crt_locale_pointers> _Locale,
    ffi.Pointer<ffi.Int8> _ArgList,
  ) {
    return ___stdio_common_vfwprintf(
      _Options,
      _Stream,
      _Format,
      _Locale,
      _ArgList,
    );
  }

  late final ___stdio_common_vfwprintf_ptr =
      _lookup<ffi.NativeFunction<_c___stdio_common_vfwprintf>>(
          '__stdio_common_vfwprintf');
  late final _dart___stdio_common_vfwprintf ___stdio_common_vfwprintf =
      ___stdio_common_vfwprintf_ptr
          .asFunction<_dart___stdio_common_vfwprintf>();

  int __stdio_common_vfwprintf_s(
    int _Options,
    ffi.Pointer<FILE> _Stream,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<__crt_locale_pointers> _Locale,
    ffi.Pointer<ffi.Int8> _ArgList,
  ) {
    return ___stdio_common_vfwprintf_s(
      _Options,
      _Stream,
      _Format,
      _Locale,
      _ArgList,
    );
  }

  late final ___stdio_common_vfwprintf_s_ptr =
      _lookup<ffi.NativeFunction<_c___stdio_common_vfwprintf_s>>(
          '__stdio_common_vfwprintf_s');
  late final _dart___stdio_common_vfwprintf_s ___stdio_common_vfwprintf_s =
      ___stdio_common_vfwprintf_s_ptr
          .asFunction<_dart___stdio_common_vfwprintf_s>();

  int __stdio_common_vfwprintf_p(
    int _Options,
    ffi.Pointer<FILE> _Stream,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<__crt_locale_pointers> _Locale,
    ffi.Pointer<ffi.Int8> _ArgList,
  ) {
    return ___stdio_common_vfwprintf_p(
      _Options,
      _Stream,
      _Format,
      _Locale,
      _ArgList,
    );
  }

  late final ___stdio_common_vfwprintf_p_ptr =
      _lookup<ffi.NativeFunction<_c___stdio_common_vfwprintf_p>>(
          '__stdio_common_vfwprintf_p');
  late final _dart___stdio_common_vfwprintf_p ___stdio_common_vfwprintf_p =
      ___stdio_common_vfwprintf_p_ptr
          .asFunction<_dart___stdio_common_vfwprintf_p>();

  int __stdio_common_vfwscanf(
    int _Options,
    ffi.Pointer<FILE> _Stream,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<__crt_locale_pointers> _Locale,
    ffi.Pointer<ffi.Int8> _ArgList,
  ) {
    return ___stdio_common_vfwscanf(
      _Options,
      _Stream,
      _Format,
      _Locale,
      _ArgList,
    );
  }

  late final ___stdio_common_vfwscanf_ptr =
      _lookup<ffi.NativeFunction<_c___stdio_common_vfwscanf>>(
          '__stdio_common_vfwscanf');
  late final _dart___stdio_common_vfwscanf ___stdio_common_vfwscanf =
      ___stdio_common_vfwscanf_ptr.asFunction<_dart___stdio_common_vfwscanf>();

  int __stdio_common_vswprintf(
    int _Options,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<__crt_locale_pointers> _Locale,
    ffi.Pointer<ffi.Int8> _ArgList,
  ) {
    return ___stdio_common_vswprintf(
      _Options,
      _Buffer,
      _BufferCount,
      _Format,
      _Locale,
      _ArgList,
    );
  }

  late final ___stdio_common_vswprintf_ptr =
      _lookup<ffi.NativeFunction<_c___stdio_common_vswprintf>>(
          '__stdio_common_vswprintf');
  late final _dart___stdio_common_vswprintf ___stdio_common_vswprintf =
      ___stdio_common_vswprintf_ptr
          .asFunction<_dart___stdio_common_vswprintf>();

  int __stdio_common_vswprintf_s(
    int _Options,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<__crt_locale_pointers> _Locale,
    ffi.Pointer<ffi.Int8> _ArgList,
  ) {
    return ___stdio_common_vswprintf_s(
      _Options,
      _Buffer,
      _BufferCount,
      _Format,
      _Locale,
      _ArgList,
    );
  }

  late final ___stdio_common_vswprintf_s_ptr =
      _lookup<ffi.NativeFunction<_c___stdio_common_vswprintf_s>>(
          '__stdio_common_vswprintf_s');
  late final _dart___stdio_common_vswprintf_s ___stdio_common_vswprintf_s =
      ___stdio_common_vswprintf_s_ptr
          .asFunction<_dart___stdio_common_vswprintf_s>();

  int __stdio_common_vsnwprintf_s(
    int _Options,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    int _MaxCount,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<__crt_locale_pointers> _Locale,
    ffi.Pointer<ffi.Int8> _ArgList,
  ) {
    return ___stdio_common_vsnwprintf_s(
      _Options,
      _Buffer,
      _BufferCount,
      _MaxCount,
      _Format,
      _Locale,
      _ArgList,
    );
  }

  late final ___stdio_common_vsnwprintf_s_ptr =
      _lookup<ffi.NativeFunction<_c___stdio_common_vsnwprintf_s>>(
          '__stdio_common_vsnwprintf_s');
  late final _dart___stdio_common_vsnwprintf_s ___stdio_common_vsnwprintf_s =
      ___stdio_common_vsnwprintf_s_ptr
          .asFunction<_dart___stdio_common_vsnwprintf_s>();

  int __stdio_common_vswprintf_p(
    int _Options,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<__crt_locale_pointers> _Locale,
    ffi.Pointer<ffi.Int8> _ArgList,
  ) {
    return ___stdio_common_vswprintf_p(
      _Options,
      _Buffer,
      _BufferCount,
      _Format,
      _Locale,
      _ArgList,
    );
  }

  late final ___stdio_common_vswprintf_p_ptr =
      _lookup<ffi.NativeFunction<_c___stdio_common_vswprintf_p>>(
          '__stdio_common_vswprintf_p');
  late final _dart___stdio_common_vswprintf_p ___stdio_common_vswprintf_p =
      ___stdio_common_vswprintf_p_ptr
          .asFunction<_dart___stdio_common_vswprintf_p>();

  int __stdio_common_vswscanf(
    int _Options,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<__crt_locale_pointers> _Locale,
    ffi.Pointer<ffi.Int8> _ArgList,
  ) {
    return ___stdio_common_vswscanf(
      _Options,
      _Buffer,
      _BufferCount,
      _Format,
      _Locale,
      _ArgList,
    );
  }

  late final ___stdio_common_vswscanf_ptr =
      _lookup<ffi.NativeFunction<_c___stdio_common_vswscanf>>(
          '__stdio_common_vswscanf');
  late final _dart___stdio_common_vswscanf ___stdio_common_vswscanf =
      ___stdio_common_vswscanf_ptr.asFunction<_dart___stdio_common_vswscanf>();

  int _itow_s(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __itow_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __itow_s_ptr = _lookup<ffi.NativeFunction<_c__itow_s>>('_itow_s');
  late final _dart__itow_s __itow_s = __itow_s_ptr.asFunction<_dart__itow_s>();

  ffi.Pointer<ffi.Uint16> _itow(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _Radix,
  ) {
    return __itow(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __itow_ptr = _lookup<ffi.NativeFunction<_c__itow>>('_itow');
  late final _dart__itow __itow = __itow_ptr.asFunction<_dart__itow>();

  int _ltow_s(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __ltow_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __ltow_s_ptr = _lookup<ffi.NativeFunction<_c__ltow_s>>('_ltow_s');
  late final _dart__ltow_s __ltow_s = __ltow_s_ptr.asFunction<_dart__ltow_s>();

  ffi.Pointer<ffi.Uint16> _ltow(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _Radix,
  ) {
    return __ltow(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __ltow_ptr = _lookup<ffi.NativeFunction<_c__ltow>>('_ltow');
  late final _dart__ltow __ltow = __ltow_ptr.asFunction<_dart__ltow>();

  int _ultow_s(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __ultow_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __ultow_s_ptr =
      _lookup<ffi.NativeFunction<_c__ultow_s>>('_ultow_s');
  late final _dart__ultow_s __ultow_s =
      __ultow_s_ptr.asFunction<_dart__ultow_s>();

  ffi.Pointer<ffi.Uint16> _ultow(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _Radix,
  ) {
    return __ultow(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __ultow_ptr = _lookup<ffi.NativeFunction<_c__ultow>>('_ultow');
  late final _dart__ultow __ultow = __ultow_ptr.asFunction<_dart__ultow>();

  double wcstod(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ) {
    return _wcstod(
      _String,
      _EndPtr,
    );
  }

  late final _wcstod_ptr = _lookup<ffi.NativeFunction<_c_wcstod>>('wcstod');
  late final _dart_wcstod _wcstod = _wcstod_ptr.asFunction<_dart_wcstod>();

  double _wcstod_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstod_l(
      _String,
      _EndPtr,
      _Locale,
    );
  }

  late final __wcstod_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstod_l>>('_wcstod_l');
  late final _dart__wcstod_l __wcstod_l =
      __wcstod_l_ptr.asFunction<_dart__wcstod_l>();

  int wcstol(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
  ) {
    return _wcstol(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _wcstol_ptr = _lookup<ffi.NativeFunction<_c_wcstol>>('wcstol');
  late final _dart_wcstol _wcstol = _wcstol_ptr.asFunction<_dart_wcstol>();

  int _wcstol_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstol_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __wcstol_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstol_l>>('_wcstol_l');
  late final _dart__wcstol_l __wcstol_l =
      __wcstol_l_ptr.asFunction<_dart__wcstol_l>();

  int wcstoll(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
  ) {
    return _wcstoll(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _wcstoll_ptr = _lookup<ffi.NativeFunction<_c_wcstoll>>('wcstoll');
  late final _dart_wcstoll _wcstoll = _wcstoll_ptr.asFunction<_dart_wcstoll>();

  int _wcstoll_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstoll_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __wcstoll_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstoll_l>>('_wcstoll_l');
  late final _dart__wcstoll_l __wcstoll_l =
      __wcstoll_l_ptr.asFunction<_dart__wcstoll_l>();

  int wcstoul(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
  ) {
    return _wcstoul(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _wcstoul_ptr = _lookup<ffi.NativeFunction<_c_wcstoul>>('wcstoul');
  late final _dart_wcstoul _wcstoul = _wcstoul_ptr.asFunction<_dart_wcstoul>();

  int _wcstoul_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstoul_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __wcstoul_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstoul_l>>('_wcstoul_l');
  late final _dart__wcstoul_l __wcstoul_l =
      __wcstoul_l_ptr.asFunction<_dart__wcstoul_l>();

  int wcstoull(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
  ) {
    return _wcstoull(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final _wcstoull_ptr =
      _lookup<ffi.NativeFunction<_c_wcstoull>>('wcstoull');
  late final _dart_wcstoull _wcstoull =
      _wcstoull_ptr.asFunction<_dart_wcstoull>();

  int _wcstoull_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstoull_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __wcstoull_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstoull_l>>('_wcstoull_l');
  late final _dart__wcstoull_l __wcstoull_l =
      __wcstoull_l_ptr.asFunction<_dart__wcstoull_l>();

  double wcstof(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ) {
    return _wcstof(
      _String,
      _EndPtr,
    );
  }

  late final _wcstof_ptr = _lookup<ffi.NativeFunction<_c_wcstof>>('wcstof');
  late final _dart_wcstof _wcstof = _wcstof_ptr.asFunction<_dart_wcstof>();

  double _wcstof_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstof_l(
      _String,
      _EndPtr,
      _Locale,
    );
  }

  late final __wcstof_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstof_l>>('_wcstof_l');
  late final _dart__wcstof_l __wcstof_l =
      __wcstof_l_ptr.asFunction<_dart__wcstof_l>();

  double _wtof(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return __wtof(
      _String,
    );
  }

  late final __wtof_ptr = _lookup<ffi.NativeFunction<_c__wtof>>('_wtof');
  late final _dart__wtof __wtof = __wtof_ptr.asFunction<_dart__wtof>();

  double _wtof_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wtof_l(
      _String,
      _Locale,
    );
  }

  late final __wtof_l_ptr = _lookup<ffi.NativeFunction<_c__wtof_l>>('_wtof_l');
  late final _dart__wtof_l __wtof_l = __wtof_l_ptr.asFunction<_dart__wtof_l>();

  int _wtoi(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return __wtoi(
      _String,
    );
  }

  late final __wtoi_ptr = _lookup<ffi.NativeFunction<_c__wtoi>>('_wtoi');
  late final _dart__wtoi __wtoi = __wtoi_ptr.asFunction<_dart__wtoi>();

  int _wtoi_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wtoi_l(
      _String,
      _Locale,
    );
  }

  late final __wtoi_l_ptr = _lookup<ffi.NativeFunction<_c__wtoi_l>>('_wtoi_l');
  late final _dart__wtoi_l __wtoi_l = __wtoi_l_ptr.asFunction<_dart__wtoi_l>();

  int _wtol(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return __wtol(
      _String,
    );
  }

  late final __wtol_ptr = _lookup<ffi.NativeFunction<_c__wtol>>('_wtol');
  late final _dart__wtol __wtol = __wtol_ptr.asFunction<_dart__wtol>();

  int _wtol_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wtol_l(
      _String,
      _Locale,
    );
  }

  late final __wtol_l_ptr = _lookup<ffi.NativeFunction<_c__wtol_l>>('_wtol_l');
  late final _dart__wtol_l __wtol_l = __wtol_l_ptr.asFunction<_dart__wtol_l>();

  int _wtoll(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return __wtoll(
      _String,
    );
  }

  late final __wtoll_ptr = _lookup<ffi.NativeFunction<_c__wtoll>>('_wtoll');
  late final _dart__wtoll __wtoll = __wtoll_ptr.asFunction<_dart__wtoll>();

  int _wtoll_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wtoll_l(
      _String,
      _Locale,
    );
  }

  late final __wtoll_l_ptr =
      _lookup<ffi.NativeFunction<_c__wtoll_l>>('_wtoll_l');
  late final _dart__wtoll_l __wtoll_l =
      __wtoll_l_ptr.asFunction<_dart__wtoll_l>();

  int _i64tow_s(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __i64tow_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __i64tow_s_ptr =
      _lookup<ffi.NativeFunction<_c__i64tow_s>>('_i64tow_s');
  late final _dart__i64tow_s __i64tow_s =
      __i64tow_s_ptr.asFunction<_dart__i64tow_s>();

  ffi.Pointer<ffi.Uint16> _i64tow(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _Radix,
  ) {
    return __i64tow(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __i64tow_ptr = _lookup<ffi.NativeFunction<_c__i64tow>>('_i64tow');
  late final _dart__i64tow __i64tow = __i64tow_ptr.asFunction<_dart__i64tow>();

  int _ui64tow_s(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    int _Radix,
  ) {
    return __ui64tow_s(
      _Value,
      _Buffer,
      _BufferCount,
      _Radix,
    );
  }

  late final __ui64tow_s_ptr =
      _lookup<ffi.NativeFunction<_c__ui64tow_s>>('_ui64tow_s');
  late final _dart__ui64tow_s __ui64tow_s =
      __ui64tow_s_ptr.asFunction<_dart__ui64tow_s>();

  ffi.Pointer<ffi.Uint16> _ui64tow(
    int _Value,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _Radix,
  ) {
    return __ui64tow(
      _Value,
      _Buffer,
      _Radix,
    );
  }

  late final __ui64tow_ptr =
      _lookup<ffi.NativeFunction<_c__ui64tow>>('_ui64tow');
  late final _dart__ui64tow __ui64tow =
      __ui64tow_ptr.asFunction<_dart__ui64tow>();

  int _wtoi64(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return __wtoi64(
      _String,
    );
  }

  late final __wtoi64_ptr = _lookup<ffi.NativeFunction<_c__wtoi64>>('_wtoi64');
  late final _dart__wtoi64 __wtoi64 = __wtoi64_ptr.asFunction<_dart__wtoi64>();

  int _wtoi64_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wtoi64_l(
      _String,
      _Locale,
    );
  }

  late final __wtoi64_l_ptr =
      _lookup<ffi.NativeFunction<_c__wtoi64_l>>('_wtoi64_l');
  late final _dart__wtoi64_l __wtoi64_l =
      __wtoi64_l_ptr.asFunction<_dart__wtoi64_l>();

  int _wcstoi64(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
  ) {
    return __wcstoi64(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final __wcstoi64_ptr =
      _lookup<ffi.NativeFunction<_c__wcstoi64>>('_wcstoi64');
  late final _dart__wcstoi64 __wcstoi64 =
      __wcstoi64_ptr.asFunction<_dart__wcstoi64>();

  int _wcstoi64_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstoi64_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __wcstoi64_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstoi64_l>>('_wcstoi64_l');
  late final _dart__wcstoi64_l __wcstoi64_l =
      __wcstoi64_l_ptr.asFunction<_dart__wcstoi64_l>();

  int _wcstoui64(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
  ) {
    return __wcstoui64(
      _String,
      _EndPtr,
      _Radix,
    );
  }

  late final __wcstoui64_ptr =
      _lookup<ffi.NativeFunction<_c__wcstoui64>>('_wcstoui64');
  late final _dart__wcstoui64 __wcstoui64 =
      __wcstoui64_ptr.asFunction<_dart__wcstoui64>();

  int _wcstoui64_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
    int _Radix,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcstoui64_l(
      _String,
      _EndPtr,
      _Radix,
      _Locale,
    );
  }

  late final __wcstoui64_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcstoui64_l>>('_wcstoui64_l');
  late final _dart__wcstoui64_l __wcstoui64_l =
      __wcstoui64_l_ptr.asFunction<_dart__wcstoui64_l>();

  ffi.Pointer<ffi.Uint16> _wfullpath(
    ffi.Pointer<ffi.Uint16> _Buffer,
    ffi.Pointer<ffi.Uint16> _Path,
    int _BufferCount,
  ) {
    return __wfullpath(
      _Buffer,
      _Path,
      _BufferCount,
    );
  }

  late final __wfullpath_ptr =
      _lookup<ffi.NativeFunction<_c__wfullpath>>('_wfullpath');
  late final _dart__wfullpath __wfullpath =
      __wfullpath_ptr.asFunction<_dart__wfullpath>();

  int _wmakepath_s(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    ffi.Pointer<ffi.Uint16> _Drive,
    ffi.Pointer<ffi.Uint16> _Dir,
    ffi.Pointer<ffi.Uint16> _Filename,
    ffi.Pointer<ffi.Uint16> _Ext,
  ) {
    return __wmakepath_s(
      _Buffer,
      _BufferCount,
      _Drive,
      _Dir,
      _Filename,
      _Ext,
    );
  }

  late final __wmakepath_s_ptr =
      _lookup<ffi.NativeFunction<_c__wmakepath_s>>('_wmakepath_s');
  late final _dart__wmakepath_s __wmakepath_s =
      __wmakepath_s_ptr.asFunction<_dart__wmakepath_s>();

  void _wmakepath(
    ffi.Pointer<ffi.Uint16> _Buffer,
    ffi.Pointer<ffi.Uint16> _Drive,
    ffi.Pointer<ffi.Uint16> _Dir,
    ffi.Pointer<ffi.Uint16> _Filename,
    ffi.Pointer<ffi.Uint16> _Ext,
  ) {
    return __wmakepath(
      _Buffer,
      _Drive,
      _Dir,
      _Filename,
      _Ext,
    );
  }

  late final __wmakepath_ptr =
      _lookup<ffi.NativeFunction<_c__wmakepath>>('_wmakepath');
  late final _dart__wmakepath __wmakepath =
      __wmakepath_ptr.asFunction<_dart__wmakepath>();

  void _wsplitpath(
    ffi.Pointer<ffi.Uint16> _FullPath,
    ffi.Pointer<ffi.Uint16> _Drive,
    ffi.Pointer<ffi.Uint16> _Dir,
    ffi.Pointer<ffi.Uint16> _Filename,
    ffi.Pointer<ffi.Uint16> _Ext,
  ) {
    return __wsplitpath(
      _FullPath,
      _Drive,
      _Dir,
      _Filename,
      _Ext,
    );
  }

  late final __wsplitpath_ptr =
      _lookup<ffi.NativeFunction<_c__wsplitpath>>('_wsplitpath');
  late final _dart__wsplitpath __wsplitpath =
      __wsplitpath_ptr.asFunction<_dart__wsplitpath>();

  int _wsplitpath_s(
    ffi.Pointer<ffi.Uint16> _FullPath,
    ffi.Pointer<ffi.Uint16> _Drive,
    int _DriveCount,
    ffi.Pointer<ffi.Uint16> _Dir,
    int _DirCount,
    ffi.Pointer<ffi.Uint16> _Filename,
    int _FilenameCount,
    ffi.Pointer<ffi.Uint16> _Ext,
    int _ExtCount,
  ) {
    return __wsplitpath_s(
      _FullPath,
      _Drive,
      _DriveCount,
      _Dir,
      _DirCount,
      _Filename,
      _FilenameCount,
      _Ext,
      _ExtCount,
    );
  }

  late final __wsplitpath_s_ptr =
      _lookup<ffi.NativeFunction<_c__wsplitpath_s>>('_wsplitpath_s');
  late final _dart__wsplitpath_s __wsplitpath_s =
      __wsplitpath_s_ptr.asFunction<_dart__wsplitpath_s>();

  int _wdupenv_s(
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Buffer,
    ffi.Pointer<ffi.Uint64> _BufferCount,
    ffi.Pointer<ffi.Uint16> _VarName,
  ) {
    return __wdupenv_s(
      _Buffer,
      _BufferCount,
      _VarName,
    );
  }

  late final __wdupenv_s_ptr =
      _lookup<ffi.NativeFunction<_c__wdupenv_s>>('_wdupenv_s');
  late final _dart__wdupenv_s __wdupenv_s =
      __wdupenv_s_ptr.asFunction<_dart__wdupenv_s>();

  ffi.Pointer<ffi.Uint16> _wgetenv(
    ffi.Pointer<ffi.Uint16> _VarName,
  ) {
    return __wgetenv(
      _VarName,
    );
  }

  late final __wgetenv_ptr =
      _lookup<ffi.NativeFunction<_c__wgetenv>>('_wgetenv');
  late final _dart__wgetenv __wgetenv =
      __wgetenv_ptr.asFunction<_dart__wgetenv>();

  int _wgetenv_s(
    ffi.Pointer<ffi.Uint64> _RequiredCount,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
    ffi.Pointer<ffi.Uint16> _VarName,
  ) {
    return __wgetenv_s(
      _RequiredCount,
      _Buffer,
      _BufferCount,
      _VarName,
    );
  }

  late final __wgetenv_s_ptr =
      _lookup<ffi.NativeFunction<_c__wgetenv_s>>('_wgetenv_s');
  late final _dart__wgetenv_s __wgetenv_s =
      __wgetenv_s_ptr.asFunction<_dart__wgetenv_s>();

  int _wputenv(
    ffi.Pointer<ffi.Uint16> _EnvString,
  ) {
    return __wputenv(
      _EnvString,
    );
  }

  late final __wputenv_ptr =
      _lookup<ffi.NativeFunction<_c__wputenv>>('_wputenv');
  late final _dart__wputenv __wputenv =
      __wputenv_ptr.asFunction<_dart__wputenv>();

  int _wputenv_s(
    ffi.Pointer<ffi.Uint16> _Name,
    ffi.Pointer<ffi.Uint16> _Value,
  ) {
    return __wputenv_s(
      _Name,
      _Value,
    );
  }

  late final __wputenv_s_ptr =
      _lookup<ffi.NativeFunction<_c__wputenv_s>>('_wputenv_s');
  late final _dart__wputenv_s __wputenv_s =
      __wputenv_s_ptr.asFunction<_dart__wputenv_s>();

  int _wsearchenv_s(
    ffi.Pointer<ffi.Uint16> _Filename,
    ffi.Pointer<ffi.Uint16> _VarName,
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _BufferCount,
  ) {
    return __wsearchenv_s(
      _Filename,
      _VarName,
      _Buffer,
      _BufferCount,
    );
  }

  late final __wsearchenv_s_ptr =
      _lookup<ffi.NativeFunction<_c__wsearchenv_s>>('_wsearchenv_s');
  late final _dart__wsearchenv_s __wsearchenv_s =
      __wsearchenv_s_ptr.asFunction<_dart__wsearchenv_s>();

  void _wsearchenv(
    ffi.Pointer<ffi.Uint16> _Filename,
    ffi.Pointer<ffi.Uint16> _VarName,
    ffi.Pointer<ffi.Uint16> _ResultPath,
  ) {
    return __wsearchenv(
      _Filename,
      _VarName,
      _ResultPath,
    );
  }

  late final __wsearchenv_ptr =
      _lookup<ffi.NativeFunction<_c__wsearchenv>>('_wsearchenv');
  late final _dart__wsearchenv __wsearchenv =
      __wsearchenv_ptr.asFunction<_dart__wsearchenv>();

  int wcscat_s(
    ffi.Pointer<ffi.Uint16> _Destination,
    int _SizeInWords,
    ffi.Pointer<ffi.Uint16> _Source,
  ) {
    return _wcscat_s(
      _Destination,
      _SizeInWords,
      _Source,
    );
  }

  late final _wcscat_s_ptr =
      _lookup<ffi.NativeFunction<_c_wcscat_s>>('wcscat_s');
  late final _dart_wcscat_s _wcscat_s =
      _wcscat_s_ptr.asFunction<_dart_wcscat_s>();

  int wcscpy_s(
    ffi.Pointer<ffi.Uint16> _Destination,
    int _SizeInWords,
    ffi.Pointer<ffi.Uint16> _Source,
  ) {
    return _wcscpy_s(
      _Destination,
      _SizeInWords,
      _Source,
    );
  }

  late final _wcscpy_s_ptr =
      _lookup<ffi.NativeFunction<_c_wcscpy_s>>('wcscpy_s');
  late final _dart_wcscpy_s _wcscpy_s =
      _wcscpy_s_ptr.asFunction<_dart_wcscpy_s>();

  int wcsncat_s(
    ffi.Pointer<ffi.Uint16> _Destination,
    int _SizeInWords,
    ffi.Pointer<ffi.Uint16> _Source,
    int _MaxCount,
  ) {
    return _wcsncat_s(
      _Destination,
      _SizeInWords,
      _Source,
      _MaxCount,
    );
  }

  late final _wcsncat_s_ptr =
      _lookup<ffi.NativeFunction<_c_wcsncat_s>>('wcsncat_s');
  late final _dart_wcsncat_s _wcsncat_s =
      _wcsncat_s_ptr.asFunction<_dart_wcsncat_s>();

  int wcsncpy_s(
    ffi.Pointer<ffi.Uint16> _Destination,
    int _SizeInWords,
    ffi.Pointer<ffi.Uint16> _Source,
    int _MaxCount,
  ) {
    return _wcsncpy_s(
      _Destination,
      _SizeInWords,
      _Source,
      _MaxCount,
    );
  }

  late final _wcsncpy_s_ptr =
      _lookup<ffi.NativeFunction<_c_wcsncpy_s>>('wcsncpy_s');
  late final _dart_wcsncpy_s _wcsncpy_s =
      _wcsncpy_s_ptr.asFunction<_dart_wcsncpy_s>();

  ffi.Pointer<ffi.Uint16> wcstok_s(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Uint16> _Delimiter,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Context,
  ) {
    return _wcstok_s(
      _String,
      _Delimiter,
      _Context,
    );
  }

  late final _wcstok_s_ptr =
      _lookup<ffi.NativeFunction<_c_wcstok_s>>('wcstok_s');
  late final _dart_wcstok_s _wcstok_s =
      _wcstok_s_ptr.asFunction<_dart_wcstok_s>();

  ffi.Pointer<ffi.Uint16> _wcsdup(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return __wcsdup(
      _String,
    );
  }

  late final __wcsdup_ptr = _lookup<ffi.NativeFunction<_c__wcsdup>>('_wcsdup');
  late final _dart__wcsdup __wcsdup = __wcsdup_ptr.asFunction<_dart__wcsdup>();

  ffi.Pointer<ffi.Uint16> wcscat(
    ffi.Pointer<ffi.Uint16> _Destination,
    ffi.Pointer<ffi.Uint16> _Source,
  ) {
    return _wcscat(
      _Destination,
      _Source,
    );
  }

  late final _wcscat_ptr = _lookup<ffi.NativeFunction<_c_wcscat>>('wcscat');
  late final _dart_wcscat _wcscat = _wcscat_ptr.asFunction<_dart_wcscat>();

  int wcscmp(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
  ) {
    return _wcscmp(
      _String1,
      _String2,
    );
  }

  late final _wcscmp_ptr = _lookup<ffi.NativeFunction<_c_wcscmp>>('wcscmp');
  late final _dart_wcscmp _wcscmp = _wcscmp_ptr.asFunction<_dart_wcscmp>();

  ffi.Pointer<ffi.Uint16> wcscpy(
    ffi.Pointer<ffi.Uint16> _Destination,
    ffi.Pointer<ffi.Uint16> _Source,
  ) {
    return _wcscpy(
      _Destination,
      _Source,
    );
  }

  late final _wcscpy_ptr = _lookup<ffi.NativeFunction<_c_wcscpy>>('wcscpy');
  late final _dart_wcscpy _wcscpy = _wcscpy_ptr.asFunction<_dart_wcscpy>();

  int wcscspn(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Uint16> _Control,
  ) {
    return _wcscspn(
      _String,
      _Control,
    );
  }

  late final _wcscspn_ptr = _lookup<ffi.NativeFunction<_c_wcscspn>>('wcscspn');
  late final _dart_wcscspn _wcscspn = _wcscspn_ptr.asFunction<_dart_wcscspn>();

  int wcslen(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return _wcslen(
      _String,
    );
  }

  late final _wcslen_ptr = _lookup<ffi.NativeFunction<_c_wcslen>>('wcslen');
  late final _dart_wcslen _wcslen = _wcslen_ptr.asFunction<_dart_wcslen>();

  int wcsnlen(
    ffi.Pointer<ffi.Uint16> _Source,
    int _MaxCount,
  ) {
    return _wcsnlen(
      _Source,
      _MaxCount,
    );
  }

  late final _wcsnlen_ptr = _lookup<ffi.NativeFunction<_c_wcsnlen>>('wcsnlen');
  late final _dart_wcsnlen _wcsnlen = _wcsnlen_ptr.asFunction<_dart_wcsnlen>();

  ffi.Pointer<ffi.Uint16> wcsncat(
    ffi.Pointer<ffi.Uint16> _Destination,
    ffi.Pointer<ffi.Uint16> _Source,
    int _Count,
  ) {
    return _wcsncat(
      _Destination,
      _Source,
      _Count,
    );
  }

  late final _wcsncat_ptr = _lookup<ffi.NativeFunction<_c_wcsncat>>('wcsncat');
  late final _dart_wcsncat _wcsncat = _wcsncat_ptr.asFunction<_dart_wcsncat>();

  int wcsncmp(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
    int _MaxCount,
  ) {
    return _wcsncmp(
      _String1,
      _String2,
      _MaxCount,
    );
  }

  late final _wcsncmp_ptr = _lookup<ffi.NativeFunction<_c_wcsncmp>>('wcsncmp');
  late final _dart_wcsncmp _wcsncmp = _wcsncmp_ptr.asFunction<_dart_wcsncmp>();

  ffi.Pointer<ffi.Uint16> wcsncpy(
    ffi.Pointer<ffi.Uint16> _Destination,
    ffi.Pointer<ffi.Uint16> _Source,
    int _Count,
  ) {
    return _wcsncpy(
      _Destination,
      _Source,
      _Count,
    );
  }

  late final _wcsncpy_ptr = _lookup<ffi.NativeFunction<_c_wcsncpy>>('wcsncpy');
  late final _dart_wcsncpy _wcsncpy = _wcsncpy_ptr.asFunction<_dart_wcsncpy>();

  ffi.Pointer<ffi.Uint16> wcspbrk(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Uint16> _Control,
  ) {
    return _wcspbrk(
      _String,
      _Control,
    );
  }

  late final _wcspbrk_ptr = _lookup<ffi.NativeFunction<_c_wcspbrk>>('wcspbrk');
  late final _dart_wcspbrk _wcspbrk = _wcspbrk_ptr.asFunction<_dart_wcspbrk>();

  int wcsspn(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Uint16> _Control,
  ) {
    return _wcsspn(
      _String,
      _Control,
    );
  }

  late final _wcsspn_ptr = _lookup<ffi.NativeFunction<_c_wcsspn>>('wcsspn');
  late final _dart_wcsspn _wcsspn = _wcsspn_ptr.asFunction<_dart_wcsspn>();

  ffi.Pointer<ffi.Uint16> wcstok(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<ffi.Uint16> _Delimiter,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Context,
  ) {
    return _wcstok(
      _String,
      _Delimiter,
      _Context,
    );
  }

  late final _wcstok_ptr = _lookup<ffi.NativeFunction<_c_wcstok>>('wcstok');
  late final _dart_wcstok _wcstok = _wcstok_ptr.asFunction<_dart_wcstok>();

  ffi.Pointer<ffi.Uint16> _wcserror(
    int _ErrorNumber,
  ) {
    return __wcserror_1(
      _ErrorNumber,
    );
  }

  late final __wcserror_ptr =
      _lookup<ffi.NativeFunction<_c__wcserror>>('_wcserror');
  late final _dart__wcserror __wcserror_1 =
      __wcserror_ptr.asFunction<_dart__wcserror>();

  int _wcserror_s(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _SizeInWords,
    int _ErrorNumber,
  ) {
    return __wcserror_s_1(
      _Buffer,
      _SizeInWords,
      _ErrorNumber,
    );
  }

  late final __wcserror_s_ptr =
      _lookup<ffi.NativeFunction<_c__wcserror_s>>('_wcserror_s');
  late final _dart__wcserror_s __wcserror_s_1 =
      __wcserror_s_ptr.asFunction<_dart__wcserror_s>();

  ffi.Pointer<ffi.Uint16> __wcserror(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return ___wcserror(
      _String,
    );
  }

  late final ___wcserror_ptr =
      _lookup<ffi.NativeFunction<_c___wcserror>>('__wcserror');
  late final _dart___wcserror ___wcserror =
      ___wcserror_ptr.asFunction<_dart___wcserror>();

  int __wcserror_s(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _SizeInWords,
    ffi.Pointer<ffi.Uint16> _ErrorMessage,
  ) {
    return ___wcserror_s(
      _Buffer,
      _SizeInWords,
      _ErrorMessage,
    );
  }

  late final ___wcserror_s_ptr =
      _lookup<ffi.NativeFunction<_c___wcserror_s>>('__wcserror_s');
  late final _dart___wcserror_s ___wcserror_s =
      ___wcserror_s_ptr.asFunction<_dart___wcserror_s>();

  int _wcsicmp(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
  ) {
    return __wcsicmp(
      _String1,
      _String2,
    );
  }

  late final __wcsicmp_ptr =
      _lookup<ffi.NativeFunction<_c__wcsicmp>>('_wcsicmp');
  late final _dart__wcsicmp __wcsicmp =
      __wcsicmp_ptr.asFunction<_dart__wcsicmp>();

  int _wcsicmp_l(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcsicmp_l(
      _String1,
      _String2,
      _Locale,
    );
  }

  late final __wcsicmp_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcsicmp_l>>('_wcsicmp_l');
  late final _dart__wcsicmp_l __wcsicmp_l =
      __wcsicmp_l_ptr.asFunction<_dart__wcsicmp_l>();

  int _wcsnicmp(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
    int _MaxCount,
  ) {
    return __wcsnicmp(
      _String1,
      _String2,
      _MaxCount,
    );
  }

  late final __wcsnicmp_ptr =
      _lookup<ffi.NativeFunction<_c__wcsnicmp>>('_wcsnicmp');
  late final _dart__wcsnicmp __wcsnicmp =
      __wcsnicmp_ptr.asFunction<_dart__wcsnicmp>();

  int _wcsnicmp_l(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
    int _MaxCount,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcsnicmp_l(
      _String1,
      _String2,
      _MaxCount,
      _Locale,
    );
  }

  late final __wcsnicmp_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcsnicmp_l>>('_wcsnicmp_l');
  late final _dart__wcsnicmp_l __wcsnicmp_l =
      __wcsnicmp_l_ptr.asFunction<_dart__wcsnicmp_l>();

  int _wcsnset_s(
    ffi.Pointer<ffi.Uint16> _Destination,
    int _SizeInWords,
    int _Value,
    int _MaxCount,
  ) {
    return __wcsnset_s(
      _Destination,
      _SizeInWords,
      _Value,
      _MaxCount,
    );
  }

  late final __wcsnset_s_ptr =
      _lookup<ffi.NativeFunction<_c__wcsnset_s>>('_wcsnset_s');
  late final _dart__wcsnset_s __wcsnset_s =
      __wcsnset_s_ptr.asFunction<_dart__wcsnset_s>();

  ffi.Pointer<ffi.Uint16> _wcsnset(
    ffi.Pointer<ffi.Uint16> _String,
    int _Value,
    int _MaxCount,
  ) {
    return __wcsnset(
      _String,
      _Value,
      _MaxCount,
    );
  }

  late final __wcsnset_ptr =
      _lookup<ffi.NativeFunction<_c__wcsnset>>('_wcsnset');
  late final _dart__wcsnset __wcsnset =
      __wcsnset_ptr.asFunction<_dart__wcsnset>();

  ffi.Pointer<ffi.Uint16> _wcsrev(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return __wcsrev(
      _String,
    );
  }

  late final __wcsrev_ptr = _lookup<ffi.NativeFunction<_c__wcsrev>>('_wcsrev');
  late final _dart__wcsrev __wcsrev = __wcsrev_ptr.asFunction<_dart__wcsrev>();

  int _wcsset_s(
    ffi.Pointer<ffi.Uint16> _Destination,
    int _SizeInWords,
    int _Value,
  ) {
    return __wcsset_s(
      _Destination,
      _SizeInWords,
      _Value,
    );
  }

  late final __wcsset_s_ptr =
      _lookup<ffi.NativeFunction<_c__wcsset_s>>('_wcsset_s');
  late final _dart__wcsset_s __wcsset_s =
      __wcsset_s_ptr.asFunction<_dart__wcsset_s>();

  ffi.Pointer<ffi.Uint16> _wcsset(
    ffi.Pointer<ffi.Uint16> _String,
    int _Value,
  ) {
    return __wcsset(
      _String,
      _Value,
    );
  }

  late final __wcsset_ptr = _lookup<ffi.NativeFunction<_c__wcsset>>('_wcsset');
  late final _dart__wcsset __wcsset = __wcsset_ptr.asFunction<_dart__wcsset>();

  int _wcslwr_s(
    ffi.Pointer<ffi.Uint16> _String,
    int _SizeInWords,
  ) {
    return __wcslwr_s(
      _String,
      _SizeInWords,
    );
  }

  late final __wcslwr_s_ptr =
      _lookup<ffi.NativeFunction<_c__wcslwr_s>>('_wcslwr_s');
  late final _dart__wcslwr_s __wcslwr_s =
      __wcslwr_s_ptr.asFunction<_dart__wcslwr_s>();

  ffi.Pointer<ffi.Uint16> _wcslwr(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return __wcslwr(
      _String,
    );
  }

  late final __wcslwr_ptr = _lookup<ffi.NativeFunction<_c__wcslwr>>('_wcslwr');
  late final _dart__wcslwr __wcslwr = __wcslwr_ptr.asFunction<_dart__wcslwr>();

  int _wcslwr_s_l(
    ffi.Pointer<ffi.Uint16> _String,
    int _SizeInWords,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcslwr_s_l(
      _String,
      _SizeInWords,
      _Locale,
    );
  }

  late final __wcslwr_s_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcslwr_s_l>>('_wcslwr_s_l');
  late final _dart__wcslwr_s_l __wcslwr_s_l =
      __wcslwr_s_l_ptr.asFunction<_dart__wcslwr_s_l>();

  ffi.Pointer<ffi.Uint16> _wcslwr_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcslwr_l(
      _String,
      _Locale,
    );
  }

  late final __wcslwr_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcslwr_l>>('_wcslwr_l');
  late final _dart__wcslwr_l __wcslwr_l =
      __wcslwr_l_ptr.asFunction<_dart__wcslwr_l>();

  int _wcsupr_s(
    ffi.Pointer<ffi.Uint16> _String,
    int _Size,
  ) {
    return __wcsupr_s(
      _String,
      _Size,
    );
  }

  late final __wcsupr_s_ptr =
      _lookup<ffi.NativeFunction<_c__wcsupr_s>>('_wcsupr_s');
  late final _dart__wcsupr_s __wcsupr_s =
      __wcsupr_s_ptr.asFunction<_dart__wcsupr_s>();

  ffi.Pointer<ffi.Uint16> _wcsupr(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return __wcsupr(
      _String,
    );
  }

  late final __wcsupr_ptr = _lookup<ffi.NativeFunction<_c__wcsupr>>('_wcsupr');
  late final _dart__wcsupr __wcsupr = __wcsupr_ptr.asFunction<_dart__wcsupr>();

  int _wcsupr_s_l(
    ffi.Pointer<ffi.Uint16> _String,
    int _Size,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcsupr_s_l(
      _String,
      _Size,
      _Locale,
    );
  }

  late final __wcsupr_s_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcsupr_s_l>>('_wcsupr_s_l');
  late final _dart__wcsupr_s_l __wcsupr_s_l =
      __wcsupr_s_l_ptr.asFunction<_dart__wcsupr_s_l>();

  ffi.Pointer<ffi.Uint16> _wcsupr_l(
    ffi.Pointer<ffi.Uint16> _String,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcsupr_l(
      _String,
      _Locale,
    );
  }

  late final __wcsupr_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcsupr_l>>('_wcsupr_l');
  late final _dart__wcsupr_l __wcsupr_l =
      __wcsupr_l_ptr.asFunction<_dart__wcsupr_l>();

  int wcsxfrm(
    ffi.Pointer<ffi.Uint16> _Destination,
    ffi.Pointer<ffi.Uint16> _Source,
    int _MaxCount,
  ) {
    return _wcsxfrm(
      _Destination,
      _Source,
      _MaxCount,
    );
  }

  late final _wcsxfrm_ptr = _lookup<ffi.NativeFunction<_c_wcsxfrm>>('wcsxfrm');
  late final _dart_wcsxfrm _wcsxfrm = _wcsxfrm_ptr.asFunction<_dart_wcsxfrm>();

  int _wcsxfrm_l(
    ffi.Pointer<ffi.Uint16> _Destination,
    ffi.Pointer<ffi.Uint16> _Source,
    int _MaxCount,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcsxfrm_l(
      _Destination,
      _Source,
      _MaxCount,
      _Locale,
    );
  }

  late final __wcsxfrm_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcsxfrm_l>>('_wcsxfrm_l');
  late final _dart__wcsxfrm_l __wcsxfrm_l =
      __wcsxfrm_l_ptr.asFunction<_dart__wcsxfrm_l>();

  int wcscoll(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
  ) {
    return _wcscoll(
      _String1,
      _String2,
    );
  }

  late final _wcscoll_ptr = _lookup<ffi.NativeFunction<_c_wcscoll>>('wcscoll');
  late final _dart_wcscoll _wcscoll = _wcscoll_ptr.asFunction<_dart_wcscoll>();

  int _wcscoll_l(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcscoll_l(
      _String1,
      _String2,
      _Locale,
    );
  }

  late final __wcscoll_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcscoll_l>>('_wcscoll_l');
  late final _dart__wcscoll_l __wcscoll_l =
      __wcscoll_l_ptr.asFunction<_dart__wcscoll_l>();

  int _wcsicoll(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
  ) {
    return __wcsicoll(
      _String1,
      _String2,
    );
  }

  late final __wcsicoll_ptr =
      _lookup<ffi.NativeFunction<_c__wcsicoll>>('_wcsicoll');
  late final _dart__wcsicoll __wcsicoll =
      __wcsicoll_ptr.asFunction<_dart__wcsicoll>();

  int _wcsicoll_l(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcsicoll_l(
      _String1,
      _String2,
      _Locale,
    );
  }

  late final __wcsicoll_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcsicoll_l>>('_wcsicoll_l');
  late final _dart__wcsicoll_l __wcsicoll_l =
      __wcsicoll_l_ptr.asFunction<_dart__wcsicoll_l>();

  int _wcsncoll(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
    int _MaxCount,
  ) {
    return __wcsncoll(
      _String1,
      _String2,
      _MaxCount,
    );
  }

  late final __wcsncoll_ptr =
      _lookup<ffi.NativeFunction<_c__wcsncoll>>('_wcsncoll');
  late final _dart__wcsncoll __wcsncoll =
      __wcsncoll_ptr.asFunction<_dart__wcsncoll>();

  int _wcsncoll_l(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
    int _MaxCount,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcsncoll_l(
      _String1,
      _String2,
      _MaxCount,
      _Locale,
    );
  }

  late final __wcsncoll_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcsncoll_l>>('_wcsncoll_l');
  late final _dart__wcsncoll_l __wcsncoll_l =
      __wcsncoll_l_ptr.asFunction<_dart__wcsncoll_l>();

  int _wcsnicoll(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
    int _MaxCount,
  ) {
    return __wcsnicoll(
      _String1,
      _String2,
      _MaxCount,
    );
  }

  late final __wcsnicoll_ptr =
      _lookup<ffi.NativeFunction<_c__wcsnicoll>>('_wcsnicoll');
  late final _dart__wcsnicoll __wcsnicoll =
      __wcsnicoll_ptr.asFunction<_dart__wcsnicoll>();

  int _wcsnicoll_l(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
    int _MaxCount,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcsnicoll_l(
      _String1,
      _String2,
      _MaxCount,
      _Locale,
    );
  }

  late final __wcsnicoll_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcsnicoll_l>>('_wcsnicoll_l');
  late final _dart__wcsnicoll_l __wcsnicoll_l =
      __wcsnicoll_l_ptr.asFunction<_dart__wcsnicoll_l>();

  ffi.Pointer<ffi.Uint16> wcsdup(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return _wcsdup_1(
      _String,
    );
  }

  late final _wcsdup_ptr = _lookup<ffi.NativeFunction<_c_wcsdup>>('wcsdup');
  late final _dart_wcsdup _wcsdup_1 = _wcsdup_ptr.asFunction<_dart_wcsdup>();

  int wcsicmp(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
  ) {
    return _wcsicmp_1(
      _String1,
      _String2,
    );
  }

  late final _wcsicmp_ptr = _lookup<ffi.NativeFunction<_c_wcsicmp>>('wcsicmp');
  late final _dart_wcsicmp _wcsicmp_1 =
      _wcsicmp_ptr.asFunction<_dart_wcsicmp>();

  int wcsnicmp(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
    int _MaxCount,
  ) {
    return _wcsnicmp_1(
      _String1,
      _String2,
      _MaxCount,
    );
  }

  late final _wcsnicmp_ptr =
      _lookup<ffi.NativeFunction<_c_wcsnicmp>>('wcsnicmp');
  late final _dart_wcsnicmp _wcsnicmp_1 =
      _wcsnicmp_ptr.asFunction<_dart_wcsnicmp>();

  ffi.Pointer<ffi.Uint16> wcsnset(
    ffi.Pointer<ffi.Uint16> _String,
    int _Value,
    int _MaxCount,
  ) {
    return _wcsnset_1(
      _String,
      _Value,
      _MaxCount,
    );
  }

  late final _wcsnset_ptr = _lookup<ffi.NativeFunction<_c_wcsnset>>('wcsnset');
  late final _dart_wcsnset _wcsnset_1 =
      _wcsnset_ptr.asFunction<_dart_wcsnset>();

  ffi.Pointer<ffi.Uint16> wcsrev(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return _wcsrev_1(
      _String,
    );
  }

  late final _wcsrev_ptr = _lookup<ffi.NativeFunction<_c_wcsrev>>('wcsrev');
  late final _dart_wcsrev _wcsrev_1 = _wcsrev_ptr.asFunction<_dart_wcsrev>();

  ffi.Pointer<ffi.Uint16> wcsset(
    ffi.Pointer<ffi.Uint16> _String,
    int _Value,
  ) {
    return _wcsset_1(
      _String,
      _Value,
    );
  }

  late final _wcsset_ptr = _lookup<ffi.NativeFunction<_c_wcsset>>('wcsset');
  late final _dart_wcsset _wcsset_1 = _wcsset_ptr.asFunction<_dart_wcsset>();

  ffi.Pointer<ffi.Uint16> wcslwr(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return _wcslwr_1(
      _String,
    );
  }

  late final _wcslwr_ptr = _lookup<ffi.NativeFunction<_c_wcslwr>>('wcslwr');
  late final _dart_wcslwr _wcslwr_1 = _wcslwr_ptr.asFunction<_dart_wcslwr>();

  ffi.Pointer<ffi.Uint16> wcsupr(
    ffi.Pointer<ffi.Uint16> _String,
  ) {
    return _wcsupr_1(
      _String,
    );
  }

  late final _wcsupr_ptr = _lookup<ffi.NativeFunction<_c_wcsupr>>('wcsupr');
  late final _dart_wcsupr _wcsupr_1 = _wcsupr_ptr.asFunction<_dart_wcsupr>();

  int wcsicoll(
    ffi.Pointer<ffi.Uint16> _String1,
    ffi.Pointer<ffi.Uint16> _String2,
  ) {
    return _wcsicoll_1(
      _String1,
      _String2,
    );
  }

  late final _wcsicoll_ptr =
      _lookup<ffi.NativeFunction<_c_wcsicoll>>('wcsicoll');
  late final _dart_wcsicoll _wcsicoll_1 =
      _wcsicoll_ptr.asFunction<_dart_wcsicoll>();

  ffi.Pointer<ffi.Uint16> _wasctime(
    ffi.Pointer<tm> _Tm,
  ) {
    return __wasctime(
      _Tm,
    );
  }

  late final __wasctime_ptr =
      _lookup<ffi.NativeFunction<_c__wasctime>>('_wasctime');
  late final _dart__wasctime __wasctime =
      __wasctime_ptr.asFunction<_dart__wasctime>();

  int _wasctime_s(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _SizeInWords,
    ffi.Pointer<tm> _Tm,
  ) {
    return __wasctime_s(
      _Buffer,
      _SizeInWords,
      _Tm,
    );
  }

  late final __wasctime_s_ptr =
      _lookup<ffi.NativeFunction<_c__wasctime_s>>('_wasctime_s');
  late final _dart__wasctime_s __wasctime_s =
      __wasctime_s_ptr.asFunction<_dart__wasctime_s>();

  int wcsftime(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _SizeInWords,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<tm> _Tm,
  ) {
    return _wcsftime(
      _Buffer,
      _SizeInWords,
      _Format,
      _Tm,
    );
  }

  late final _wcsftime_ptr =
      _lookup<ffi.NativeFunction<_c_wcsftime>>('wcsftime');
  late final _dart_wcsftime _wcsftime =
      _wcsftime_ptr.asFunction<_dart_wcsftime>();

  int _wcsftime_l(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _SizeInWords,
    ffi.Pointer<ffi.Uint16> _Format,
    ffi.Pointer<tm> _Tm,
    ffi.Pointer<__crt_locale_pointers> _Locale,
  ) {
    return __wcsftime_l(
      _Buffer,
      _SizeInWords,
      _Format,
      _Tm,
      _Locale,
    );
  }

  late final __wcsftime_l_ptr =
      _lookup<ffi.NativeFunction<_c__wcsftime_l>>('_wcsftime_l');
  late final _dart__wcsftime_l __wcsftime_l =
      __wcsftime_l_ptr.asFunction<_dart__wcsftime_l>();

  ffi.Pointer<ffi.Uint16> _wctime32(
    ffi.Pointer<ffi.Int64> _Time,
  ) {
    return __wctime32(
      _Time,
    );
  }

  late final __wctime32_ptr =
      _lookup<ffi.NativeFunction<_c__wctime32>>('_wctime32');
  late final _dart__wctime32 __wctime32 =
      __wctime32_ptr.asFunction<_dart__wctime32>();

  int _wctime32_s(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _SizeInWords,
    ffi.Pointer<ffi.Int64> _Time,
  ) {
    return __wctime32_s(
      _Buffer,
      _SizeInWords,
      _Time,
    );
  }

  late final __wctime32_s_ptr =
      _lookup<ffi.NativeFunction<_c__wctime32_s>>('_wctime32_s');
  late final _dart__wctime32_s __wctime32_s =
      __wctime32_s_ptr.asFunction<_dart__wctime32_s>();

  ffi.Pointer<ffi.Uint16> _wctime64(
    ffi.Pointer<ffi.Int64> _Time,
  ) {
    return __wctime64(
      _Time,
    );
  }

  late final __wctime64_ptr =
      _lookup<ffi.NativeFunction<_c__wctime64>>('_wctime64');
  late final _dart__wctime64 __wctime64 =
      __wctime64_ptr.asFunction<_dart__wctime64>();

  int _wctime64_s(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _SizeInWords,
    ffi.Pointer<ffi.Int64> _Time,
  ) {
    return __wctime64_s(
      _Buffer,
      _SizeInWords,
      _Time,
    );
  }

  late final __wctime64_s_ptr =
      _lookup<ffi.NativeFunction<_c__wctime64_s>>('_wctime64_s');
  late final _dart__wctime64_s __wctime64_s =
      __wctime64_s_ptr.asFunction<_dart__wctime64_s>();

  int _wstrdate_s(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _SizeInWords,
  ) {
    return __wstrdate_s(
      _Buffer,
      _SizeInWords,
    );
  }

  late final __wstrdate_s_ptr =
      _lookup<ffi.NativeFunction<_c__wstrdate_s>>('_wstrdate_s');
  late final _dart__wstrdate_s __wstrdate_s =
      __wstrdate_s_ptr.asFunction<_dart__wstrdate_s>();

  ffi.Pointer<ffi.Uint16> _wstrdate(
    ffi.Pointer<ffi.Uint16> _Buffer,
  ) {
    return __wstrdate(
      _Buffer,
    );
  }

  late final __wstrdate_ptr =
      _lookup<ffi.NativeFunction<_c__wstrdate>>('_wstrdate');
  late final _dart__wstrdate __wstrdate =
      __wstrdate_ptr.asFunction<_dart__wstrdate>();

  int _wstrtime_s(
    ffi.Pointer<ffi.Uint16> _Buffer,
    int _SizeInWords,
  ) {
    return __wstrtime_s(
      _Buffer,
      _SizeInWords,
    );
  }

  late final __wstrtime_s_ptr =
      _lookup<ffi.NativeFunction<_c__wstrtime_s>>('_wstrtime_s');
  late final _dart__wstrtime_s __wstrtime_s =
      __wstrtime_s_ptr.asFunction<_dart__wstrtime_s>();

  ffi.Pointer<ffi.Uint16> _wstrtime(
    ffi.Pointer<ffi.Uint16> _Buffer,
  ) {
    return __wstrtime(
      _Buffer,
    );
  }

  late final __wstrtime_ptr =
      _lookup<ffi.NativeFunction<_c__wstrtime>>('_wstrtime');
  late final _dart__wstrtime __wstrtime =
      __wstrtime_ptr.asFunction<_dart__wstrtime>();

  int _fstat32(
    int _FileHandle,
    ffi.Pointer<_stat32> _Stat,
  ) {
    return __fstat32(
      _FileHandle,
      _Stat,
    );
  }

  late final __fstat32_ptr =
      _lookup<ffi.NativeFunction<_c__fstat32>>('_fstat32');
  late final _dart__fstat32 __fstat32 =
      __fstat32_ptr.asFunction<_dart__fstat32>();

  int _fstat32i64(
    int _FileHandle,
    ffi.Pointer<_stat32i64> _Stat,
  ) {
    return __fstat32i64(
      _FileHandle,
      _Stat,
    );
  }

  late final __fstat32i64_ptr =
      _lookup<ffi.NativeFunction<_c__fstat32i64>>('_fstat32i64');
  late final _dart__fstat32i64 __fstat32i64 =
      __fstat32i64_ptr.asFunction<_dart__fstat32i64>();

  int _fstat64i32(
    int _FileHandle,
    ffi.Pointer<_stat64i32> _Stat,
  ) {
    return __fstat64i32(
      _FileHandle,
      _Stat,
    );
  }

  late final __fstat64i32_ptr =
      _lookup<ffi.NativeFunction<_c__fstat64i32>>('_fstat64i32');
  late final _dart__fstat64i32 __fstat64i32 =
      __fstat64i32_ptr.asFunction<_dart__fstat64i32>();

  int _fstat64(
    int _FileHandle,
    ffi.Pointer<_stat64> _Stat,
  ) {
    return __fstat64(
      _FileHandle,
      _Stat,
    );
  }

  late final __fstat64_ptr =
      _lookup<ffi.NativeFunction<_c__fstat64>>('_fstat64');
  late final _dart__fstat64 __fstat64 =
      __fstat64_ptr.asFunction<_dart__fstat64>();

  int _stat32_1(
    ffi.Pointer<ffi.Int8> _FileName,
    ffi.Pointer<_stat32> _Stat,
  ) {
    return __stat32_1(
      _FileName,
      _Stat,
    );
  }

  late final __stat32_1_ptr =
      _lookup<ffi.NativeFunction<_c__stat32_1>>('_stat32');
  late final _dart__stat32_1 __stat32_1 =
      __stat32_1_ptr.asFunction<_dart__stat32_1>();

  int _stat32i64_1(
    ffi.Pointer<ffi.Int8> _FileName,
    ffi.Pointer<_stat32i64> _Stat,
  ) {
    return __stat32i64_1(
      _FileName,
      _Stat,
    );
  }

  late final __stat32i64_1_ptr =
      _lookup<ffi.NativeFunction<_c__stat32i64_1>>('_stat32i64');
  late final _dart__stat32i64_1 __stat32i64_1 =
      __stat32i64_1_ptr.asFunction<_dart__stat32i64_1>();

  int _stat64i32_1(
    ffi.Pointer<ffi.Int8> _FileName,
    ffi.Pointer<_stat64i32> _Stat,
  ) {
    return __stat64i32_1(
      _FileName,
      _Stat,
    );
  }

  late final __stat64i32_1_ptr =
      _lookup<ffi.NativeFunction<_c__stat64i32_1>>('_stat64i32');
  late final _dart__stat64i32_1 __stat64i32_1 =
      __stat64i32_1_ptr.asFunction<_dart__stat64i32_1>();

  int _stat64_1(
    ffi.Pointer<ffi.Int8> _FileName,
    ffi.Pointer<_stat64> _Stat,
  ) {
    return __stat64_1(
      _FileName,
      _Stat,
    );
  }

  late final __stat64_1_ptr =
      _lookup<ffi.NativeFunction<_c__stat64_1>>('_stat64');
  late final _dart__stat64_1 __stat64_1 =
      __stat64_1_ptr.asFunction<_dart__stat64_1>();

  int _wstat32(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<_stat32> _Stat,
  ) {
    return __wstat32(
      _FileName,
      _Stat,
    );
  }

  late final __wstat32_ptr =
      _lookup<ffi.NativeFunction<_c__wstat32>>('_wstat32');
  late final _dart__wstat32 __wstat32 =
      __wstat32_ptr.asFunction<_dart__wstat32>();

  int _wstat32i64(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<_stat32i64> _Stat,
  ) {
    return __wstat32i64(
      _FileName,
      _Stat,
    );
  }

  late final __wstat32i64_ptr =
      _lookup<ffi.NativeFunction<_c__wstat32i64>>('_wstat32i64');
  late final _dart__wstat32i64 __wstat32i64 =
      __wstat32i64_ptr.asFunction<_dart__wstat32i64>();

  int _wstat64i32(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<_stat64i32> _Stat,
  ) {
    return __wstat64i32(
      _FileName,
      _Stat,
    );
  }

  late final __wstat64i32_ptr =
      _lookup<ffi.NativeFunction<_c__wstat64i32>>('_wstat64i32');
  late final _dart__wstat64i32 __wstat64i32 =
      __wstat64i32_ptr.asFunction<_dart__wstat64i32>();

  int _wstat64(
    ffi.Pointer<ffi.Uint16> _FileName,
    ffi.Pointer<_stat64> _Stat,
  ) {
    return __wstat64(
      _FileName,
      _Stat,
    );
  }

  late final __wstat64_ptr =
      _lookup<ffi.NativeFunction<_c__wstat64>>('_wstat64');
  late final _dart__wstat64 __wstat64 =
      __wstat64_ptr.asFunction<_dart__wstat64>();

  ffi.Pointer<ffi.Uint16> _wsetlocale(
    int _Category,
    ffi.Pointer<ffi.Uint16> _Locale,
  ) {
    return __wsetlocale(
      _Category,
      _Locale,
    );
  }

  late final __wsetlocale_ptr =
      _lookup<ffi.NativeFunction<_c__wsetlocale>>('_wsetlocale');
  late final _dart__wsetlocale __wsetlocale =
      __wsetlocale_ptr.asFunction<_dart__wsetlocale>();

  ffi.Pointer<__crt_locale_pointers> _wcreate_locale(
    int _Category,
    ffi.Pointer<ffi.Uint16> _Locale,
  ) {
    return __wcreate_locale(
      _Category,
      _Locale,
    );
  }

  late final __wcreate_locale_ptr =
      _lookup<ffi.NativeFunction<_c__wcreate_locale>>('_wcreate_locale');
  late final _dart__wcreate_locale __wcreate_locale =
      __wcreate_locale_ptr.asFunction<_dart__wcreate_locale>();

  int btowc(
    int _Ch,
  ) {
    return _btowc(
      _Ch,
    );
  }

  late final _btowc_ptr = _lookup<ffi.NativeFunction<_c_btowc>>('btowc');
  late final _dart_btowc _btowc = _btowc_ptr.asFunction<_dart_btowc>();

  int mbrlen(
    ffi.Pointer<ffi.Int8> _Ch,
    int _SizeInBytes,
    ffi.Pointer<_Mbstatet> _State,
  ) {
    return _mbrlen(
      _Ch,
      _SizeInBytes,
      _State,
    );
  }

  late final _mbrlen_ptr = _lookup<ffi.NativeFunction<_c_mbrlen>>('mbrlen');
  late final _dart_mbrlen _mbrlen = _mbrlen_ptr.asFunction<_dart_mbrlen>();

  int mbrtowc(
    ffi.Pointer<ffi.Uint16> _DstCh,
    ffi.Pointer<ffi.Int8> _SrcCh,
    int _SizeInBytes,
    ffi.Pointer<_Mbstatet> _State,
  ) {
    return _mbrtowc(
      _DstCh,
      _SrcCh,
      _SizeInBytes,
      _State,
    );
  }

  late final _mbrtowc_ptr = _lookup<ffi.NativeFunction<_c_mbrtowc>>('mbrtowc');
  late final _dart_mbrtowc _mbrtowc = _mbrtowc_ptr.asFunction<_dart_mbrtowc>();

  int mbsrtowcs_s(
    ffi.Pointer<ffi.Uint64> _Retval,
    ffi.Pointer<ffi.Uint16> _Dst,
    int _Size,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _PSrc,
    int _N,
    ffi.Pointer<_Mbstatet> _State,
  ) {
    return _mbsrtowcs_s(
      _Retval,
      _Dst,
      _Size,
      _PSrc,
      _N,
      _State,
    );
  }

  late final _mbsrtowcs_s_ptr =
      _lookup<ffi.NativeFunction<_c_mbsrtowcs_s>>('mbsrtowcs_s');
  late final _dart_mbsrtowcs_s _mbsrtowcs_s =
      _mbsrtowcs_s_ptr.asFunction<_dart_mbsrtowcs_s>();

  int mbsrtowcs(
    ffi.Pointer<ffi.Uint16> _Dest,
    ffi.Pointer<ffi.Pointer<ffi.Int8>> _PSrc,
    int _Count,
    ffi.Pointer<_Mbstatet> _State,
  ) {
    return _mbsrtowcs(
      _Dest,
      _PSrc,
      _Count,
      _State,
    );
  }

  late final _mbsrtowcs_ptr =
      _lookup<ffi.NativeFunction<_c_mbsrtowcs>>('mbsrtowcs');
  late final _dart_mbsrtowcs _mbsrtowcs =
      _mbsrtowcs_ptr.asFunction<_dart_mbsrtowcs>();

  int wcrtomb_s(
    ffi.Pointer<ffi.Uint64> _Retval,
    ffi.Pointer<ffi.Int8> _Dst,
    int _SizeInBytes,
    int _Ch,
    ffi.Pointer<_Mbstatet> _State,
  ) {
    return _wcrtomb_s(
      _Retval,
      _Dst,
      _SizeInBytes,
      _Ch,
      _State,
    );
  }

  late final _wcrtomb_s_ptr =
      _lookup<ffi.NativeFunction<_c_wcrtomb_s>>('wcrtomb_s');
  late final _dart_wcrtomb_s _wcrtomb_s =
      _wcrtomb_s_ptr.asFunction<_dart_wcrtomb_s>();

  int wcrtomb(
    ffi.Pointer<ffi.Int8> _Dest,
    int _Source,
    ffi.Pointer<_Mbstatet> _State,
  ) {
    return _wcrtomb(
      _Dest,
      _Source,
      _State,
    );
  }

  late final _wcrtomb_ptr = _lookup<ffi.NativeFunction<_c_wcrtomb>>('wcrtomb');
  late final _dart_wcrtomb _wcrtomb = _wcrtomb_ptr.asFunction<_dart_wcrtomb>();

  int wcsrtombs_s(
    ffi.Pointer<ffi.Uint64> _Retval,
    ffi.Pointer<ffi.Int8> _Dst,
    int _SizeInBytes,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Src,
    int _Size,
    ffi.Pointer<_Mbstatet> _State,
  ) {
    return _wcsrtombs_s(
      _Retval,
      _Dst,
      _SizeInBytes,
      _Src,
      _Size,
      _State,
    );
  }

  late final _wcsrtombs_s_ptr =
      _lookup<ffi.NativeFunction<_c_wcsrtombs_s>>('wcsrtombs_s');
  late final _dart_wcsrtombs_s _wcsrtombs_s =
      _wcsrtombs_s_ptr.asFunction<_dart_wcsrtombs_s>();

  int wcsrtombs(
    ffi.Pointer<ffi.Int8> _Dest,
    ffi.Pointer<ffi.Pointer<ffi.Uint16>> _PSource,
    int _Count,
    ffi.Pointer<_Mbstatet> _State,
  ) {
    return _wcsrtombs(
      _Dest,
      _PSource,
      _Count,
      _State,
    );
  }

  late final _wcsrtombs_ptr =
      _lookup<ffi.NativeFunction<_c_wcsrtombs>>('wcsrtombs');
  late final _dart_wcsrtombs _wcsrtombs =
      _wcsrtombs_ptr.asFunction<_dart_wcsrtombs>();

  int wctob(
    int _WCh,
  ) {
    return _wctob(
      _WCh,
    );
  }

  late final _wctob_ptr = _lookup<ffi.NativeFunction<_c_wctob>>('wctob');
  late final _dart_wctob _wctob = _wctob_ptr.asFunction<_dart_wctob>();

  int wmemcpy_s(
    ffi.Pointer<ffi.Uint16> _S1,
    int _N1,
    ffi.Pointer<ffi.Uint16> _S2,
    int _N,
  ) {
    return _wmemcpy_s(
      _S1,
      _N1,
      _S2,
      _N,
    );
  }

  late final _wmemcpy_s_ptr =
      _lookup<ffi.NativeFunction<_c_wmemcpy_s>>('wmemcpy_s');
  late final _dart_wmemcpy_s _wmemcpy_s =
      _wmemcpy_s_ptr.asFunction<_dart_wmemcpy_s>();

  int wmemmove_s(
    ffi.Pointer<ffi.Uint16> _S1,
    int _N1,
    ffi.Pointer<ffi.Uint16> _S2,
    int _N,
  ) {
    return _wmemmove_s(
      _S1,
      _N1,
      _S2,
      _N,
    );
  }

  late final _wmemmove_s_ptr =
      _lookup<ffi.NativeFunction<_c_wmemmove_s>>('wmemmove_s');
  late final _dart_wmemmove_s _wmemmove_s =
      _wmemmove_s_ptr.asFunction<_dart_wmemmove_s>();

  /// Name:         Tolk_Load
  /// Description:  Initializes Tolk by loading and initializing the screen reader drivers and setting the current screen reader driver, provided at least one of the supported screen readers is active. Also initializes COM if it has not already been initialized on the calling thread. Calling this function more than once will only initialize COM. You should call this function before using the functions below. Use Tolk_IsLoaded to determine if Tolk has been initialized.
  /// Parameters:   None.
  /// Returns:      None.
  void Tolk_Load() {
    return _Tolk_Load();
  }

  late final _Tolk_Load_ptr =
      _lookup<ffi.NativeFunction<_c_Tolk_Load>>('Tolk_Load');
  late final _dart_Tolk_Load _Tolk_Load =
      _Tolk_Load_ptr.asFunction<_dart_Tolk_Load>();

  /// Name:         Tolk_IsLoaded
  /// Description:  Tests if Tolk has been initialized.
  /// Parameters:   None.
  /// Returns:      true if Tolk has been initialized, false otherwise.
  bool Tolk_IsLoaded() {
    return _Tolk_IsLoaded() != 0;
  }

  late final _Tolk_IsLoaded_ptr =
      _lookup<ffi.NativeFunction<_c_Tolk_IsLoaded>>('Tolk_IsLoaded');
  late final _dart_Tolk_IsLoaded _Tolk_IsLoaded =
      _Tolk_IsLoaded_ptr.asFunction<_dart_Tolk_IsLoaded>();

  /// Name:         Tolk_Unload
  /// Description:  Finalizes Tolk by finalizing and unloading the screen reader drivers and clearing the current screen reader driver, provided one was set. Also uninitializes COM on the calling thread. Calling this function more than once will only uninitialize COM. You should not use the functions below if this function has been called.
  /// Parameters:   None.
  /// Returns:      None.
  void Tolk_Unload() {
    return _Tolk_Unload();
  }

  late final _Tolk_Unload_ptr =
      _lookup<ffi.NativeFunction<_c_Tolk_Unload>>('Tolk_Unload');
  late final _dart_Tolk_Unload _Tolk_Unload =
      _Tolk_Unload_ptr.asFunction<_dart_Tolk_Unload>();

  /// Name:         Tolk_TrySAPI
  /// Description:  Sets if Microsoft Speech API (SAPI) should be used in the screen reader auto-detection process. The default is not to include SAPI. The SAPI driver will use the system default synthesizer, voice and soundcard. This function triggers the screen reader detection process if needed. For best performance, you should call this function before calling Tolk_Load.
  /// Parameters:   trySAPI: whether or not to include SAPI in auto-detection.
  /// Returns:      None.
  void Tolk_TrySAPI(
    bool trySAPI,
  ) {
    return _Tolk_TrySAPI(
      trySAPI ? 1 : 0,
    );
  }

  late final _Tolk_TrySAPI_ptr =
      _lookup<ffi.NativeFunction<_c_Tolk_TrySAPI>>('Tolk_TrySAPI');
  late final _dart_Tolk_TrySAPI _Tolk_TrySAPI =
      _Tolk_TrySAPI_ptr.asFunction<_dart_Tolk_TrySAPI>();

  /// Name:         Tolk_PreferSAPI
  /// Description:  If auto-detection for SAPI has been turned on through Tolk_TrySAPI, sets if SAPI should be placed first (true) or last (false) in the screen reader detection list. Putting it last is the default and is good for using SAPI as a fallback option. Putting it first is good for ensuring SAPI is used even when a screen reader is running, but keep in mind screen readers will still be tried if SAPI is unavailable. This function triggers the screen reader detection process if needed. For best performance, you should call this function before calling Tolk_Load.
  /// Parameters:   preferSAPI: whether or not to prefer SAPI over screen reader drivers in auto-detection.
  /// Returns:      None.
  void Tolk_PreferSAPI(
    bool preferSAPI,
  ) {
    return _Tolk_PreferSAPI(
      preferSAPI ? 1 : 0,
    );
  }

  late final _Tolk_PreferSAPI_ptr =
      _lookup<ffi.NativeFunction<_c_Tolk_PreferSAPI>>('Tolk_PreferSAPI');
  late final _dart_Tolk_PreferSAPI _Tolk_PreferSAPI =
      _Tolk_PreferSAPI_ptr.asFunction<_dart_Tolk_PreferSAPI>();

  /// Name:         Tolk_DetectScreenReader
  /// Description:  Returns the common name for the currently active screen reader driver, if one is set. If none is set, tries to detect the currently active screen reader before looking up the name. If no screen reader is active, NULL is returned. Note that the drivers hard-code the common name, it is not requested from the screen reader itself. You should call Tolk_Load once before using this function.
  /// Parameters:   None.
  /// Returns:      A Unicode string representation of the common name on success, NULL otherwise.
  ffi.Pointer<ffi.Uint16> Tolk_DetectScreenReader() {
    return _Tolk_DetectScreenReader();
  }

  late final _Tolk_DetectScreenReader_ptr =
      _lookup<ffi.NativeFunction<_c_Tolk_DetectScreenReader>>(
          'Tolk_DetectScreenReader');
  late final _dart_Tolk_DetectScreenReader _Tolk_DetectScreenReader =
      _Tolk_DetectScreenReader_ptr.asFunction<_dart_Tolk_DetectScreenReader>();

  /// Name:         Tolk_HasSpeech
  /// Description:  Tests if the current screen reader driver supports speech output, if one is set. If none is set, tries to detect the currently active screen reader before testing for speech support. You should call Tolk_Load once before using this function.
  /// Parameters:   None.
  /// Returns:      true if the current screen reader driver supports speech, false otherwise.
  bool Tolk_HasSpeech() {
    return _Tolk_HasSpeech() != 0;
  }

  late final _Tolk_HasSpeech_ptr =
      _lookup<ffi.NativeFunction<_c_Tolk_HasSpeech>>('Tolk_HasSpeech');
  late final _dart_Tolk_HasSpeech _Tolk_HasSpeech =
      _Tolk_HasSpeech_ptr.asFunction<_dart_Tolk_HasSpeech>();

  /// Name:         Tolk_HasBraille
  /// Description:  Tests if the current screen reader driver supports braille output, if one is set. If none is set, tries to detect the currently active screen reader before testing for braille support. You should call Tolk_Load once before using this function.
  /// Parameters:   None.
  /// Returns:      true if the current screen reader driver supports braille, false otherwise.
  bool Tolk_HasBraille() {
    return _Tolk_HasBraille() != 0;
  }

  late final _Tolk_HasBraille_ptr =
      _lookup<ffi.NativeFunction<_c_Tolk_HasBraille>>('Tolk_HasBraille');
  late final _dart_Tolk_HasBraille _Tolk_HasBraille =
      _Tolk_HasBraille_ptr.asFunction<_dart_Tolk_HasBraille>();

  bool Tolk_Output(
    ffi.Pointer<ffi.Uint16> str,
    bool interrupt,
  ) {
    return _Tolk_Output(
          str,
          interrupt ? 1 : 0,
        ) !=
        0;
  }

  late final _Tolk_Output_ptr =
      _lookup<ffi.NativeFunction<_c_Tolk_Output>>('Tolk_Output');
  late final _dart_Tolk_Output _Tolk_Output =
      _Tolk_Output_ptr.asFunction<_dart_Tolk_Output>();

  bool Tolk_Speak(
    ffi.Pointer<ffi.Uint16> str,
    bool interrupt,
  ) {
    return _Tolk_Speak(
          str,
          interrupt ? 1 : 0,
        ) !=
        0;
  }

  late final _Tolk_Speak_ptr =
      _lookup<ffi.NativeFunction<_c_Tolk_Speak>>('Tolk_Speak');
  late final _dart_Tolk_Speak _Tolk_Speak =
      _Tolk_Speak_ptr.asFunction<_dart_Tolk_Speak>();

  /// Name:         Tolk_Braille
  /// Description:  Brailles text through the current screen reader driver, if one is set and supports braille output. If none is set or if it encountered an error, tries to detect the currently active screen reader before brailling the given text. Use this function only if you specifically need to braille text through the current screen reader without also speaking it. Not all screen reader drivers may support this functionality. Therefore, use Tolk_Output whenever possible. You should call Tolk_Load once before using this function.
  /// Parameters:   str: text to braille.
  /// Returns:      true on success, false otherwise.
  bool Tolk_Braille(
    ffi.Pointer<ffi.Uint16> str,
  ) {
    return _Tolk_Braille(
          str,
        ) !=
        0;
  }

  late final _Tolk_Braille_ptr =
      _lookup<ffi.NativeFunction<_c_Tolk_Braille>>('Tolk_Braille');
  late final _dart_Tolk_Braille _Tolk_Braille =
      _Tolk_Braille_ptr.asFunction<_dart_Tolk_Braille>();

  /// Name:         Tolk_IsSpeaking
  /// Description:  Tests if the screen reader associated with the current screen reader driver is speaking, if one is set and supports querying for status information. If none is set, tries to detect the currently active screen reader before testing if it is speaking. You should call Tolk_Load once before using this function.
  /// Parameters:   None.
  /// Returns:      true if text is being spoken by the screen reader, false otherwise.
  bool Tolk_IsSpeaking() {
    return _Tolk_IsSpeaking() != 0;
  }

  late final _Tolk_IsSpeaking_ptr =
      _lookup<ffi.NativeFunction<_c_Tolk_IsSpeaking>>('Tolk_IsSpeaking');
  late final _dart_Tolk_IsSpeaking _Tolk_IsSpeaking =
      _Tolk_IsSpeaking_ptr.asFunction<_dart_Tolk_IsSpeaking>();

  /// Name:         Tolk_Silence
  /// Description:  Silences the screen reader associated with the current screen reader driver, if one is set and supports speech output. If none is set or if it encountered an error, tries to detect the currently active screen reader before silencing it. You should call Tolk_Load once before using this function.
  /// Parameters:   None.
  /// Returns:      true on success, false otherwise.
  bool Tolk_Silence() {
    return _Tolk_Silence() != 0;
  }

  late final _Tolk_Silence_ptr =
      _lookup<ffi.NativeFunction<_c_Tolk_Silence>>('Tolk_Silence');
  late final _dart_Tolk_Silence _Tolk_Silence =
      _Tolk_Silence_ptr.asFunction<_dart_Tolk_Silence>();
}

class __crt_locale_data_public extends ffi.Struct {
  external ffi.Pointer<ffi.Uint16> _locale_pctype;

  @ffi.Int32()
  external int _locale_mb_cur_max;

  @ffi.Uint32()
  external int _locale_lc_codepage;
}

class __crt_locale_data extends ffi.Opaque {}

class __crt_multibyte_data extends ffi.Opaque {}

class __crt_locale_pointers extends ffi.Struct {
  external ffi.Pointer<__crt_locale_data> locinfo;

  external ffi.Pointer<__crt_multibyte_data> mbcinfo;
}

class _Mbstatet extends ffi.Struct {
  @ffi.Uint64()
  external int _Wchar;

  @ffi.Uint16()
  external int _Byte;

  @ffi.Uint16()
  external int _State;
}

class _wfinddata32_t extends ffi.Opaque {}

class _wfinddata32i64_t extends ffi.Opaque {}

class _wfinddata64i32_t extends ffi.Opaque {}

class _wfinddata64_t extends ffi.Opaque {}

class FILE extends ffi.Struct {
  external ffi.Pointer<ffi.Void> _Placeholder;
}

class tm extends ffi.Struct {
  @ffi.Int32()
  external int tm_sec;

  @ffi.Int32()
  external int tm_min;

  @ffi.Int32()
  external int tm_hour;

  @ffi.Int32()
  external int tm_mday;

  @ffi.Int32()
  external int tm_mon;

  @ffi.Int32()
  external int tm_year;

  @ffi.Int32()
  external int tm_wday;

  @ffi.Int32()
  external int tm_yday;

  @ffi.Int32()
  external int tm_isdst;
}

class _stat32 extends ffi.Struct {
  @ffi.Uint32()
  external int st_dev;

  @ffi.Uint16()
  external int st_ino;

  @ffi.Uint16()
  external int st_mode;

  @ffi.Int16()
  external int st_nlink;

  @ffi.Int16()
  external int st_uid;

  @ffi.Int16()
  external int st_gid;

  @ffi.Uint32()
  external int st_rdev;

  @ffi.Int64()
  external int st_size;

  @ffi.Int64()
  external int st_atime;

  @ffi.Int64()
  external int st_mtime;

  @ffi.Int64()
  external int st_ctime;
}

class _stat32i64 extends ffi.Struct {
  @ffi.Uint32()
  external int st_dev;

  @ffi.Uint16()
  external int st_ino;

  @ffi.Uint16()
  external int st_mode;

  @ffi.Int16()
  external int st_nlink;

  @ffi.Int16()
  external int st_uid;

  @ffi.Int16()
  external int st_gid;

  @ffi.Uint32()
  external int st_rdev;

  @ffi.Int64()
  external int st_size;

  @ffi.Int64()
  external int st_atime;

  @ffi.Int64()
  external int st_mtime;

  @ffi.Int64()
  external int st_ctime;
}

class _stat64i32 extends ffi.Struct {
  @ffi.Uint32()
  external int st_dev;

  @ffi.Uint16()
  external int st_ino;

  @ffi.Uint16()
  external int st_mode;

  @ffi.Int16()
  external int st_nlink;

  @ffi.Int16()
  external int st_uid;

  @ffi.Int16()
  external int st_gid;

  @ffi.Uint32()
  external int st_rdev;

  @ffi.Int64()
  external int st_size;

  @ffi.Int64()
  external int st_atime;

  @ffi.Int64()
  external int st_mtime;

  @ffi.Int64()
  external int st_ctime;
}

class _stat64 extends ffi.Struct {
  @ffi.Uint32()
  external int st_dev;

  @ffi.Uint16()
  external int st_ino;

  @ffi.Uint16()
  external int st_mode;

  @ffi.Int16()
  external int st_nlink;

  @ffi.Int16()
  external int st_uid;

  @ffi.Int16()
  external int st_gid;

  @ffi.Uint32()
  external int st_rdev;

  @ffi.Int64()
  external int st_size;

  @ffi.Int64()
  external int st_atime;

  @ffi.Int64()
  external int st_mtime;

  @ffi.Int64()
  external int st_ctime;
}

class stat extends ffi.Struct {
  @ffi.Uint32()
  external int st_dev;

  @ffi.Uint16()
  external int st_ino;

  @ffi.Uint16()
  external int st_mode;

  @ffi.Int16()
  external int st_nlink;

  @ffi.Int16()
  external int st_uid;

  @ffi.Int16()
  external int st_gid;

  @ffi.Uint32()
  external int st_rdev;

  @ffi.Int64()
  external int st_size;

  @ffi.Int64()
  external int st_atime;

  @ffi.Int64()
  external int st_mtime;

  @ffi.Int64()
  external int st_ctime;
}

const int false_1 = 0;

const int true_1 = 1;

const int __null = 0;

const int _WCHAR_T_DEFINED = 1;

typedef _c___va_start = ffi.Void Function(
  ffi.Pointer<ffi.Pointer<ffi.Int8>> arg0,
);

typedef _dart___va_start = void Function(
  ffi.Pointer<ffi.Pointer<ffi.Int8>> arg0,
);

typedef _c___security_init_cookie = ffi.Void Function();

typedef _dart___security_init_cookie = void Function();

typedef _c___security_check_cookie = ffi.Void Function(
  ffi.Uint64 _StackCookie,
);

typedef _dart___security_check_cookie = void Function(
  int _StackCookie,
);

typedef _c___report_gsfailure = ffi.Void Function(
  ffi.Uint64 _StackCookie,
);

typedef _dart___report_gsfailure = void Function(
  int _StackCookie,
);

typedef _c__invalid_parameter_noinfo = ffi.Void Function();

typedef _dart__invalid_parameter_noinfo = void Function();

typedef _c__invalid_parameter_noinfo_noreturn = ffi.Void Function();

typedef _dart__invalid_parameter_noinfo_noreturn = void Function();

typedef _c__invoke_watson = ffi.Void Function(
  ffi.Pointer<ffi.Uint16> _Expression,
  ffi.Pointer<ffi.Uint16> _FunctionName,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Uint32 _LineNo,
  ffi.Uint64 _Reserved,
);

typedef _dart__invoke_watson = void Function(
  ffi.Pointer<ffi.Uint16> _Expression,
  ffi.Pointer<ffi.Uint16> _FunctionName,
  ffi.Pointer<ffi.Uint16> _FileName,
  int _LineNo,
  int _Reserved,
);

typedef _c__errno = ffi.Pointer<ffi.Int32> Function();

typedef _dart__errno = ffi.Pointer<ffi.Int32> Function();

typedef _c__set_errno = ffi.Int32 Function(
  ffi.Int32 _Value,
);

typedef _dart__set_errno = int Function(
  int _Value,
);

typedef _c__get_errno = ffi.Int32 Function(
  ffi.Pointer<ffi.Int32> _Value,
);

typedef _dart__get_errno = int Function(
  ffi.Pointer<ffi.Int32> _Value,
);

typedef _c___doserrno = ffi.Pointer<ffi.Uint64> Function();

typedef _dart___doserrno = ffi.Pointer<ffi.Uint64> Function();

typedef _c__set_doserrno = ffi.Int32 Function(
  ffi.Uint64 _Value,
);

typedef _dart__set_doserrno = int Function(
  int _Value,
);

typedef _c__get_doserrno = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> _Value,
);

typedef _dart__get_doserrno = int Function(
  ffi.Pointer<ffi.Uint64> _Value,
);

typedef _c_memchr = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Buf,
  ffi.Int32 _Val,
  ffi.Uint64 _MaxCount,
);

typedef _dart_memchr = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Buf,
  int _Val,
  int _MaxCount,
);

typedef _c_memcmp = ffi.Int32 Function(
  ffi.Pointer<ffi.Void> _Buf1,
  ffi.Pointer<ffi.Void> _Buf2,
  ffi.Uint64 _Size,
);

typedef _dart_memcmp = int Function(
  ffi.Pointer<ffi.Void> _Buf1,
  ffi.Pointer<ffi.Void> _Buf2,
  int _Size,
);

typedef _c_memcpy = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Dst,
  ffi.Pointer<ffi.Void> _Src,
  ffi.Uint64 _Size,
);

typedef _dart_memcpy = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Dst,
  ffi.Pointer<ffi.Void> _Src,
  int _Size,
);

typedef _c_memmove = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Dst,
  ffi.Pointer<ffi.Void> _Src,
  ffi.Uint64 _Size,
);

typedef _dart_memmove = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Dst,
  ffi.Pointer<ffi.Void> _Src,
  int _Size,
);

typedef _c_memset = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Dst,
  ffi.Int32 _Val,
  ffi.Uint64 _Size,
);

typedef _dart_memset = ffi.Pointer<ffi.Void> Function(
  ffi.Pointer<ffi.Void> _Dst,
  int _Val,
  int _Size,
);

typedef _c_strchr = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> _Str,
  ffi.Int32 _Val,
);

typedef _dart_strchr = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> _Str,
  int _Val,
);

typedef _c_strrchr = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> _Str,
  ffi.Int32 _Ch,
);

typedef _dart_strrchr = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> _Str,
  int _Ch,
);

typedef _c_strstr = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> _Str,
  ffi.Pointer<ffi.Int8> _SubStr,
);

typedef _dart_strstr = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> _Str,
  ffi.Pointer<ffi.Int8> _SubStr,
);

typedef _c_wcschr = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Str,
  ffi.Uint16 _Ch,
);

typedef _dart_wcschr = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Str,
  int _Ch,
);

typedef _c_wcsrchr = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Str,
  ffi.Uint16 _Ch,
);

typedef _dart_wcsrchr = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Str,
  int _Ch,
);

typedef _c_wcsstr = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Str,
  ffi.Pointer<ffi.Uint16> _SubStr,
);

typedef _dart_wcsstr = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Str,
  ffi.Pointer<ffi.Uint16> _SubStr,
);

typedef _c__cgetws_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Pointer<ffi.Uint64> _SizeRead,
);

typedef _dart__cgetws_s = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  ffi.Pointer<ffi.Uint64> _SizeRead,
);

typedef _c__cputws = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
);

typedef _dart__cputws = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
);

typedef _c__getwch = ffi.Uint16 Function();

typedef _dart__getwch = int Function();

typedef _c__getwche = ffi.Uint16 Function();

typedef _dart__getwche = int Function();

typedef _c__putwch = ffi.Uint16 Function(
  ffi.Uint16 _Character,
);

typedef _dart__putwch = int Function(
  int _Character,
);

typedef _c__ungetwch = ffi.Uint16 Function(
  ffi.Uint16 _Character,
);

typedef _dart__ungetwch = int Function(
  int _Character,
);

typedef _c__getwch_nolock = ffi.Uint16 Function();

typedef _dart__getwch_nolock = int Function();

typedef _c__getwche_nolock = ffi.Uint16 Function();

typedef _dart__getwche_nolock = int Function();

typedef _c__putwch_nolock = ffi.Uint16 Function(
  ffi.Uint16 _Character,
);

typedef _dart__putwch_nolock = int Function(
  int _Character,
);

typedef _c__ungetwch_nolock = ffi.Uint16 Function(
  ffi.Uint16 _Character,
);

typedef _dart__ungetwch_nolock = int Function(
  int _Character,
);

typedef _c___conio_common_vcwprintf = ffi.Int32 Function(
  ffi.Uint64 _Options,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _dart___conio_common_vcwprintf = int Function(
  int _Options,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _c___conio_common_vcwprintf_s = ffi.Int32 Function(
  ffi.Uint64 _Options,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _dart___conio_common_vcwprintf_s = int Function(
  int _Options,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _c___conio_common_vcwprintf_p = ffi.Int32 Function(
  ffi.Uint64 _Options,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _dart___conio_common_vcwprintf_p = int Function(
  int _Options,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _c___conio_common_vcwscanf = ffi.Int32 Function(
  ffi.Uint64 _Options,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _dart___conio_common_vcwscanf = int Function(
  int _Options,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _c___pctype_func = ffi.Pointer<ffi.Uint16> Function();

typedef _dart___pctype_func = ffi.Pointer<ffi.Uint16> Function();

typedef _c___pwctype_func = ffi.Pointer<ffi.Uint16> Function();

typedef _dart___pwctype_func = ffi.Pointer<ffi.Uint16> Function();

typedef _c_iswalnum = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart_iswalnum = int Function(
  int _C,
);

typedef _c_iswalpha = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart_iswalpha = int Function(
  int _C,
);

typedef _c_iswascii = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart_iswascii = int Function(
  int _C,
);

typedef _c_iswblank = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart_iswblank = int Function(
  int _C,
);

typedef _c_iswcntrl = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart_iswcntrl = int Function(
  int _C,
);

typedef _c_iswdigit = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart_iswdigit = int Function(
  int _C,
);

typedef _c_iswgraph = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart_iswgraph = int Function(
  int _C,
);

typedef _c_iswlower = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart_iswlower = int Function(
  int _C,
);

typedef _c_iswprint = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart_iswprint = int Function(
  int _C,
);

typedef _c_iswpunct = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart_iswpunct = int Function(
  int _C,
);

typedef _c_iswspace = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart_iswspace = int Function(
  int _C,
);

typedef _c_iswupper = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart_iswupper = int Function(
  int _C,
);

typedef _c_iswxdigit = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart_iswxdigit = int Function(
  int _C,
);

typedef _c___iswcsymf = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart___iswcsymf = int Function(
  int _C,
);

typedef _c___iswcsym = ffi.Int32 Function(
  ffi.Uint16 _C,
);

typedef _dart___iswcsym = int Function(
  int _C,
);

typedef _c__iswalnum_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswalnum_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__iswalpha_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswalpha_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__iswblank_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswblank_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__iswcntrl_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswcntrl_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__iswdigit_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswdigit_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__iswgraph_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswgraph_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__iswlower_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswlower_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__iswprint_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswprint_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__iswpunct_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswpunct_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__iswspace_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswspace_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__iswupper_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswupper_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__iswxdigit_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswxdigit_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__iswcsymf_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswcsymf_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__iswcsym_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswcsym_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_towupper = ffi.Uint16 Function(
  ffi.Uint16 _C,
);

typedef _dart_towupper = int Function(
  int _C,
);

typedef _c_towlower = ffi.Uint16 Function(
  ffi.Uint16 _C,
);

typedef _dart_towlower = int Function(
  int _C,
);

typedef _c_iswctype = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Uint16 _Type,
);

typedef _dart_iswctype = int Function(
  int _C,
  int _Type,
);

typedef _c__towupper_l = ffi.Uint16 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__towupper_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__towlower_l = ffi.Uint16 Function(
  ffi.Uint16 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__towlower_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__iswctype_l = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Uint16 _Type,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__iswctype_l = int Function(
  int _C,
  int _Type,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_isleadbyte = ffi.Int32 Function(
  ffi.Int32 _C,
);

typedef _dart_isleadbyte = int Function(
  int _C,
);

typedef _c__isleadbyte_l = ffi.Int32 Function(
  ffi.Int32 _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__isleadbyte_l = int Function(
  int _C,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_is_wctype = ffi.Int32 Function(
  ffi.Uint16 _C,
  ffi.Uint16 _Type,
);

typedef _dart_is_wctype = int Function(
  int _C,
  int _Type,
);

typedef _c__wgetcwd = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _DstBuf,
  ffi.Int32 _SizeInWords,
);

typedef _dart__wgetcwd = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _DstBuf,
  int _SizeInWords,
);

typedef _c__wgetdcwd = ffi.Pointer<ffi.Uint16> Function(
  ffi.Int32 _Drive,
  ffi.Pointer<ffi.Uint16> _DstBuf,
  ffi.Int32 _SizeInWords,
);

typedef _dart__wgetdcwd = ffi.Pointer<ffi.Uint16> Function(
  int _Drive,
  ffi.Pointer<ffi.Uint16> _DstBuf,
  int _SizeInWords,
);

typedef _c__wchdir = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Path,
);

typedef _dart__wchdir = int Function(
  ffi.Pointer<ffi.Uint16> _Path,
);

typedef _c__wmkdir = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Path,
);

typedef _dart__wmkdir = int Function(
  ffi.Pointer<ffi.Uint16> _Path,
);

typedef _c__wrmdir = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Path,
);

typedef _dart__wrmdir = int Function(
  ffi.Pointer<ffi.Uint16> _Path,
);

typedef _c__waccess = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Int32 _AccessMode,
);

typedef _dart__waccess = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  int _AccessMode,
);

typedef _c__waccess_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Int32 _AccessMode,
);

typedef _dart__waccess_s = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  int _AccessMode,
);

typedef _c__wchmod = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Int32 _Mode,
);

typedef _dart__wchmod = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  int _Mode,
);

typedef _c__wcreat = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Int32 _PermissionMode,
);

typedef _dart__wcreat = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  int _PermissionMode,
);

typedef _c__wfindfirst32 = ffi.IntPtr Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_wfinddata32_t> _FindData,
);

typedef _dart__wfindfirst32 = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_wfinddata32_t> _FindData,
);

typedef _c__wfindnext32 = ffi.Int32 Function(
  ffi.IntPtr _FindHandle,
  ffi.Pointer<_wfinddata32_t> _FindData,
);

typedef _dart__wfindnext32 = int Function(
  int _FindHandle,
  ffi.Pointer<_wfinddata32_t> _FindData,
);

typedef _c__wunlink = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FileName,
);

typedef _dart__wunlink = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
);

typedef _c__wrename = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _OldFileName,
  ffi.Pointer<ffi.Uint16> _NewFileName,
);

typedef _dart__wrename = int Function(
  ffi.Pointer<ffi.Uint16> _OldFileName,
  ffi.Pointer<ffi.Uint16> _NewFileName,
);

typedef _c__wmktemp_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _TemplateName,
  ffi.Uint64 _SizeInWords,
);

typedef _dart__wmktemp_s = int Function(
  ffi.Pointer<ffi.Uint16> _TemplateName,
  int _SizeInWords,
);

typedef _c__wmktemp = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _TemplateName,
);

typedef _dart__wmktemp = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _TemplateName,
);

typedef _c__wfindfirst32i64 = ffi.IntPtr Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_wfinddata32i64_t> _FindData,
);

typedef _dart__wfindfirst32i64 = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_wfinddata32i64_t> _FindData,
);

typedef _c__wfindfirst64i32 = ffi.IntPtr Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_wfinddata64i32_t> _FindData,
);

typedef _dart__wfindfirst64i32 = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_wfinddata64i32_t> _FindData,
);

typedef _c__wfindfirst64 = ffi.IntPtr Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_wfinddata64_t> _FindData,
);

typedef _dart__wfindfirst64 = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_wfinddata64_t> _FindData,
);

typedef _c__wfindnext32i64 = ffi.Int32 Function(
  ffi.IntPtr _FindHandle,
  ffi.Pointer<_wfinddata32i64_t> _FindData,
);

typedef _dart__wfindnext32i64 = int Function(
  int _FindHandle,
  ffi.Pointer<_wfinddata32i64_t> _FindData,
);

typedef _c__wfindnext64i32 = ffi.Int32 Function(
  ffi.IntPtr _FindHandle,
  ffi.Pointer<_wfinddata64i32_t> _FindData,
);

typedef _dart__wfindnext64i32 = int Function(
  int _FindHandle,
  ffi.Pointer<_wfinddata64i32_t> _FindData,
);

typedef _c__wfindnext64 = ffi.Int32 Function(
  ffi.IntPtr _FindHandle,
  ffi.Pointer<_wfinddata64_t> _FindData,
);

typedef _dart__wfindnext64 = int Function(
  int _FindHandle,
  ffi.Pointer<_wfinddata64_t> _FindData,
);

typedef _c__wsopen_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Int32> _FileHandle,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Int32 _OpenFlag,
  ffi.Int32 _ShareFlag,
  ffi.Int32 _PermissionFlag,
);

typedef _dart__wsopen_s = int Function(
  ffi.Pointer<ffi.Int32> _FileHandle,
  ffi.Pointer<ffi.Uint16> _FileName,
  int _OpenFlag,
  int _ShareFlag,
  int _PermissionFlag,
);

typedef _c__wsopen_dispatch = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Int32 _OFlag,
  ffi.Int32 _ShFlag,
  ffi.Int32 _PMode,
  ffi.Pointer<ffi.Int32> _PFileHandle,
  ffi.Int32 _BSecure,
);

typedef _dart__wsopen_dispatch = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  int _OFlag,
  int _ShFlag,
  int _PMode,
  ffi.Pointer<ffi.Int32> _PFileHandle,
  int _BSecure,
);

typedef _c__wopen = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Int32 _OpenFlag,
);

typedef _dart__wopen = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  int _OpenFlag,
);

typedef _c__wsopen = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Int32 _OpenFlag,
  ffi.Int32 _ShareFlag,
);

typedef _dart__wsopen = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  int _OpenFlag,
  int _ShareFlag,
);

typedef _c__wexecl = ffi.IntPtr Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _dart__wexecl = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _c__wexecle = ffi.IntPtr Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _dart__wexecle = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _c__wexeclp = ffi.IntPtr Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _dart__wexeclp = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _c__wexeclpe = ffi.IntPtr Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _dart__wexeclpe = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _c__wexecv = ffi.IntPtr Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
);

typedef _dart__wexecv = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
);

typedef _c__wexecve = ffi.IntPtr Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Env,
);

typedef _dart__wexecve = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Env,
);

typedef _c__wexecvp = ffi.IntPtr Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
);

typedef _dart__wexecvp = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
);

typedef _c__wexecvpe = ffi.IntPtr Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Env,
);

typedef _dart__wexecvpe = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Env,
);

typedef _c__wspawnl = ffi.IntPtr Function(
  ffi.Int32 _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _dart__wspawnl = int Function(
  int _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _c__wspawnle = ffi.IntPtr Function(
  ffi.Int32 _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _dart__wspawnle = int Function(
  int _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _c__wspawnlp = ffi.IntPtr Function(
  ffi.Int32 _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _dart__wspawnlp = int Function(
  int _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _c__wspawnlpe = ffi.IntPtr Function(
  ffi.Int32 _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _dart__wspawnlpe = int Function(
  int _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _ArgList,
);

typedef _c__wspawnv = ffi.IntPtr Function(
  ffi.Int32 _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
);

typedef _dart__wspawnv = int Function(
  int _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
);

typedef _c__wspawnve = ffi.IntPtr Function(
  ffi.Int32 _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Env,
);

typedef _dart__wspawnve = int Function(
  int _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Env,
);

typedef _c__wspawnvp = ffi.IntPtr Function(
  ffi.Int32 _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
);

typedef _dart__wspawnvp = int Function(
  int _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
);

typedef _c__wspawnvpe = ffi.IntPtr Function(
  ffi.Int32 _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Env,
);

typedef _dart__wspawnvpe = int Function(
  int _Mode,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _ArgList,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Env,
);

typedef _c__wsystem = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Command,
);

typedef _dart__wsystem = int Function(
  ffi.Pointer<ffi.Uint16> _Command,
);

typedef _c___acrt_iob_func = ffi.Pointer<FILE> Function(
  ffi.Uint32 _Ix,
);

typedef _dart___acrt_iob_func = ffi.Pointer<FILE> Function(
  int _Ix,
);

typedef _c_fgetwc = ffi.Uint16 Function(
  ffi.Pointer<FILE> _Stream,
);

typedef _dart_fgetwc = int Function(
  ffi.Pointer<FILE> _Stream,
);

typedef _c__fgetwchar = ffi.Uint16 Function();

typedef _dart__fgetwchar = int Function();

typedef _c_fputwc = ffi.Uint16 Function(
  ffi.Uint16 _Character,
  ffi.Pointer<FILE> _Stream,
);

typedef _dart_fputwc = int Function(
  int _Character,
  ffi.Pointer<FILE> _Stream,
);

typedef _c__fputwchar = ffi.Uint16 Function(
  ffi.Uint16 _Character,
);

typedef _dart__fputwchar = int Function(
  int _Character,
);

typedef _c_getwc = ffi.Uint16 Function(
  ffi.Pointer<FILE> _Stream,
);

typedef _dart_getwc = int Function(
  ffi.Pointer<FILE> _Stream,
);

typedef _c_getwchar = ffi.Uint16 Function();

typedef _dart_getwchar = int Function();

typedef _c_fgetws = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Int32 _BufferCount,
  ffi.Pointer<FILE> _Stream,
);

typedef _dart_fgetws = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  ffi.Pointer<FILE> _Stream,
);

typedef _c_fputws = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Pointer<FILE> _Stream,
);

typedef _dart_fputws = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Pointer<FILE> _Stream,
);

typedef _c__getws_s = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
);

typedef _dart__getws_s = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
);

typedef _c_putwc = ffi.Uint16 Function(
  ffi.Uint16 _Character,
  ffi.Pointer<FILE> _Stream,
);

typedef _dart_putwc = int Function(
  int _Character,
  ffi.Pointer<FILE> _Stream,
);

typedef _c_putwchar = ffi.Uint16 Function(
  ffi.Uint16 _Character,
);

typedef _dart_putwchar = int Function(
  int _Character,
);

typedef _c__putws = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
);

typedef _dart__putws = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
);

typedef _c_ungetwc = ffi.Uint16 Function(
  ffi.Uint16 _Character,
  ffi.Pointer<FILE> _Stream,
);

typedef _dart_ungetwc = int Function(
  int _Character,
  ffi.Pointer<FILE> _Stream,
);

typedef _c__wfdopen = ffi.Pointer<FILE> Function(
  ffi.Int32 _FileHandle,
  ffi.Pointer<ffi.Uint16> _Mode,
);

typedef _dart__wfdopen = ffi.Pointer<FILE> Function(
  int _FileHandle,
  ffi.Pointer<ffi.Uint16> _Mode,
);

typedef _c__wfopen = ffi.Pointer<FILE> Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _Mode,
);

typedef _dart__wfopen = ffi.Pointer<FILE> Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _Mode,
);

typedef _c__wfopen_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Pointer<FILE>> _Stream,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _Mode,
);

typedef _dart__wfopen_s = int Function(
  ffi.Pointer<ffi.Pointer<FILE>> _Stream,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _Mode,
);

typedef _c__wfreopen = ffi.Pointer<FILE> Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _Mode,
  ffi.Pointer<FILE> _OldStream,
);

typedef _dart__wfreopen = ffi.Pointer<FILE> Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _Mode,
  ffi.Pointer<FILE> _OldStream,
);

typedef _c__wfreopen_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Pointer<FILE>> _Stream,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _Mode,
  ffi.Pointer<FILE> _OldStream,
);

typedef _dart__wfreopen_s = int Function(
  ffi.Pointer<ffi.Pointer<FILE>> _Stream,
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _Mode,
  ffi.Pointer<FILE> _OldStream,
);

typedef _c__wfsopen = ffi.Pointer<FILE> Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _Mode,
  ffi.Int32 _ShFlag,
);

typedef _dart__wfsopen = ffi.Pointer<FILE> Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<ffi.Uint16> _Mode,
  int _ShFlag,
);

typedef _c__wperror = ffi.Void Function(
  ffi.Pointer<ffi.Uint16> _ErrorMessage,
);

typedef _dart__wperror = void Function(
  ffi.Pointer<ffi.Uint16> _ErrorMessage,
);

typedef _c__wpopen = ffi.Pointer<FILE> Function(
  ffi.Pointer<ffi.Uint16> _Command,
  ffi.Pointer<ffi.Uint16> _Mode,
);

typedef _dart__wpopen = ffi.Pointer<FILE> Function(
  ffi.Pointer<ffi.Uint16> _Command,
  ffi.Pointer<ffi.Uint16> _Mode,
);

typedef _c__wremove = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FileName,
);

typedef _dart__wremove = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
);

typedef _c__wtempnam = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Directory,
  ffi.Pointer<ffi.Uint16> _FilePrefix,
);

typedef _dart__wtempnam = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Directory,
  ffi.Pointer<ffi.Uint16> _FilePrefix,
);

typedef _c__wtmpnam_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
);

typedef _dart__wtmpnam_s = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
);

typedef _c__wtmpnam = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
);

typedef _dart__wtmpnam = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
);

typedef _c__fgetwc_nolock = ffi.Uint16 Function(
  ffi.Pointer<FILE> _Stream,
);

typedef _dart__fgetwc_nolock = int Function(
  ffi.Pointer<FILE> _Stream,
);

typedef _c__fputwc_nolock = ffi.Uint16 Function(
  ffi.Uint16 _Character,
  ffi.Pointer<FILE> _Stream,
);

typedef _dart__fputwc_nolock = int Function(
  int _Character,
  ffi.Pointer<FILE> _Stream,
);

typedef _c__getwc_nolock = ffi.Uint16 Function(
  ffi.Pointer<FILE> _Stream,
);

typedef _dart__getwc_nolock = int Function(
  ffi.Pointer<FILE> _Stream,
);

typedef _c__putwc_nolock = ffi.Uint16 Function(
  ffi.Uint16 _Character,
  ffi.Pointer<FILE> _Stream,
);

typedef _dart__putwc_nolock = int Function(
  int _Character,
  ffi.Pointer<FILE> _Stream,
);

typedef _c__ungetwc_nolock = ffi.Uint16 Function(
  ffi.Uint16 _Character,
  ffi.Pointer<FILE> _Stream,
);

typedef _dart__ungetwc_nolock = int Function(
  int _Character,
  ffi.Pointer<FILE> _Stream,
);

typedef _c___stdio_common_vfwprintf = ffi.Int32 Function(
  ffi.Uint64 _Options,
  ffi.Pointer<FILE> _Stream,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _dart___stdio_common_vfwprintf = int Function(
  int _Options,
  ffi.Pointer<FILE> _Stream,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _c___stdio_common_vfwprintf_s = ffi.Int32 Function(
  ffi.Uint64 _Options,
  ffi.Pointer<FILE> _Stream,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _dart___stdio_common_vfwprintf_s = int Function(
  int _Options,
  ffi.Pointer<FILE> _Stream,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _c___stdio_common_vfwprintf_p = ffi.Int32 Function(
  ffi.Uint64 _Options,
  ffi.Pointer<FILE> _Stream,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _dart___stdio_common_vfwprintf_p = int Function(
  int _Options,
  ffi.Pointer<FILE> _Stream,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _c___stdio_common_vfwscanf = ffi.Int32 Function(
  ffi.Uint64 _Options,
  ffi.Pointer<FILE> _Stream,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _dart___stdio_common_vfwscanf = int Function(
  int _Options,
  ffi.Pointer<FILE> _Stream,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _c___stdio_common_vswprintf = ffi.Int32 Function(
  ffi.Uint64 _Options,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _dart___stdio_common_vswprintf = int Function(
  int _Options,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _c___stdio_common_vswprintf_s = ffi.Int32 Function(
  ffi.Uint64 _Options,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _dart___stdio_common_vswprintf_s = int Function(
  int _Options,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _c___stdio_common_vsnwprintf_s = ffi.Int32 Function(
  ffi.Uint64 _Options,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Uint64 _MaxCount,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _dart___stdio_common_vsnwprintf_s = int Function(
  int _Options,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  int _MaxCount,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _c___stdio_common_vswprintf_p = ffi.Int32 Function(
  ffi.Uint64 _Options,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _dart___stdio_common_vswprintf_p = int Function(
  int _Options,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _c___stdio_common_vswscanf = ffi.Int32 Function(
  ffi.Uint64 _Options,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _dart___stdio_common_vswscanf = int Function(
  int _Options,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<__crt_locale_pointers> _Locale,
  ffi.Pointer<ffi.Int8> _ArgList,
);

typedef _c__itow_s = ffi.Int32 Function(
  ffi.Int32 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__itow_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__itow = ffi.Pointer<ffi.Uint16> Function(
  ffi.Int32 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__itow = ffi.Pointer<ffi.Uint16> Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _Radix,
);

typedef _c__ltow_s = ffi.Int32 Function(
  ffi.Int64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__ltow_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__ltow = ffi.Pointer<ffi.Uint16> Function(
  ffi.Int64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__ltow = ffi.Pointer<ffi.Uint16> Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _Radix,
);

typedef _c__ultow_s = ffi.Int32 Function(
  ffi.Uint64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__ultow_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__ultow = ffi.Pointer<ffi.Uint16> Function(
  ffi.Uint64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__ultow = ffi.Pointer<ffi.Uint16> Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _Radix,
);

typedef _c_wcstod = ffi.Double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
);

typedef _dart_wcstod = double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
);

typedef _c__wcstod_l = ffi.Double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstod_l = double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wcstol = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart_wcstol = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
);

typedef _c__wcstol_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstol_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wcstoll = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart_wcstoll = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
);

typedef _c__wcstoll_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstoll_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wcstoul = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart_wcstoul = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
);

typedef _c__wcstoul_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstoul_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wcstoull = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart_wcstoull = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
);

typedef _c__wcstoull_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstoull_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wcstof = ffi.Float Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
);

typedef _dart_wcstof = double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
);

typedef _c__wcstof_l = ffi.Float Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstof_l = double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wtof = ffi.Double Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart__wtof = double Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c__wtof_l = ffi.Double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wtof_l = double Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wtoi = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart__wtoi = int Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c__wtoi_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wtoi_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wtol = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart__wtol = int Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c__wtol_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wtol_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wtoll = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart__wtoll = int Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c__wtoll_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wtoll_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__i64tow_s = ffi.Int32 Function(
  ffi.Int64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__i64tow_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__i64tow = ffi.Pointer<ffi.Uint16> Function(
  ffi.Int64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__i64tow = ffi.Pointer<ffi.Uint16> Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _Radix,
);

typedef _c__ui64tow_s = ffi.Int32 Function(
  ffi.Uint64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Int32 _Radix,
);

typedef _dart__ui64tow_s = int Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  int _Radix,
);

typedef _c__ui64tow = ffi.Pointer<ffi.Uint16> Function(
  ffi.Uint64 _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Int32 _Radix,
);

typedef _dart__ui64tow = ffi.Pointer<ffi.Uint16> Function(
  int _Value,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _Radix,
);

typedef _c__wtoi64 = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart__wtoi64 = int Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c__wtoi64_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wtoi64_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wcstoi64 = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart__wcstoi64 = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
);

typedef _c__wcstoi64_l = ffi.Int64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstoi64_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wcstoui64 = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
);

typedef _dart__wcstoui64 = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
);

typedef _c__wcstoui64_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  ffi.Int32 _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcstoui64_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _EndPtr,
  int _Radix,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wfullpath = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Pointer<ffi.Uint16> _Path,
  ffi.Uint64 _BufferCount,
);

typedef _dart__wfullpath = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Pointer<ffi.Uint16> _Path,
  int _BufferCount,
);

typedef _c__wmakepath_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Pointer<ffi.Uint16> _Drive,
  ffi.Pointer<ffi.Uint16> _Dir,
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _Ext,
);

typedef _dart__wmakepath_s = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  ffi.Pointer<ffi.Uint16> _Drive,
  ffi.Pointer<ffi.Uint16> _Dir,
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _Ext,
);

typedef _c__wmakepath = ffi.Void Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Pointer<ffi.Uint16> _Drive,
  ffi.Pointer<ffi.Uint16> _Dir,
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _Ext,
);

typedef _dart__wmakepath = void Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Pointer<ffi.Uint16> _Drive,
  ffi.Pointer<ffi.Uint16> _Dir,
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _Ext,
);

typedef _c__wsplitpath = ffi.Void Function(
  ffi.Pointer<ffi.Uint16> _FullPath,
  ffi.Pointer<ffi.Uint16> _Drive,
  ffi.Pointer<ffi.Uint16> _Dir,
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _Ext,
);

typedef _dart__wsplitpath = void Function(
  ffi.Pointer<ffi.Uint16> _FullPath,
  ffi.Pointer<ffi.Uint16> _Drive,
  ffi.Pointer<ffi.Uint16> _Dir,
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _Ext,
);

typedef _c__wsplitpath_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FullPath,
  ffi.Pointer<ffi.Uint16> _Drive,
  ffi.Uint64 _DriveCount,
  ffi.Pointer<ffi.Uint16> _Dir,
  ffi.Uint64 _DirCount,
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Uint64 _FilenameCount,
  ffi.Pointer<ffi.Uint16> _Ext,
  ffi.Uint64 _ExtCount,
);

typedef _dart__wsplitpath_s = int Function(
  ffi.Pointer<ffi.Uint16> _FullPath,
  ffi.Pointer<ffi.Uint16> _Drive,
  int _DriveCount,
  ffi.Pointer<ffi.Uint16> _Dir,
  int _DirCount,
  ffi.Pointer<ffi.Uint16> _Filename,
  int _FilenameCount,
  ffi.Pointer<ffi.Uint16> _Ext,
  int _ExtCount,
);

typedef _c__wdupenv_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Buffer,
  ffi.Pointer<ffi.Uint64> _BufferCount,
  ffi.Pointer<ffi.Uint16> _VarName,
);

typedef _dart__wdupenv_s = int Function(
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Buffer,
  ffi.Pointer<ffi.Uint64> _BufferCount,
  ffi.Pointer<ffi.Uint16> _VarName,
);

typedef _c__wgetenv = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _VarName,
);

typedef _dart__wgetenv = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _VarName,
);

typedef _c__wgetenv_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> _RequiredCount,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
  ffi.Pointer<ffi.Uint16> _VarName,
);

typedef _dart__wgetenv_s = int Function(
  ffi.Pointer<ffi.Uint64> _RequiredCount,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
  ffi.Pointer<ffi.Uint16> _VarName,
);

typedef _c__wputenv = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _EnvString,
);

typedef _dart__wputenv = int Function(
  ffi.Pointer<ffi.Uint16> _EnvString,
);

typedef _c__wputenv_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Name,
  ffi.Pointer<ffi.Uint16> _Value,
);

typedef _dart__wputenv_s = int Function(
  ffi.Pointer<ffi.Uint16> _Name,
  ffi.Pointer<ffi.Uint16> _Value,
);

typedef _c__wsearchenv_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _VarName,
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _BufferCount,
);

typedef _dart__wsearchenv_s = int Function(
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _VarName,
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _BufferCount,
);

typedef _c__wsearchenv = ffi.Void Function(
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _VarName,
  ffi.Pointer<ffi.Uint16> _ResultPath,
);

typedef _dart__wsearchenv = void Function(
  ffi.Pointer<ffi.Uint16> _Filename,
  ffi.Pointer<ffi.Uint16> _VarName,
  ffi.Pointer<ffi.Uint16> _ResultPath,
);

typedef _c_wcscat_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Uint64 _SizeInWords,
  ffi.Pointer<ffi.Uint16> _Source,
);

typedef _dart_wcscat_s = int Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  int _SizeInWords,
  ffi.Pointer<ffi.Uint16> _Source,
);

typedef _c_wcscpy_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Uint64 _SizeInWords,
  ffi.Pointer<ffi.Uint16> _Source,
);

typedef _dart_wcscpy_s = int Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  int _SizeInWords,
  ffi.Pointer<ffi.Uint16> _Source,
);

typedef _c_wcsncat_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Uint64 _SizeInWords,
  ffi.Pointer<ffi.Uint16> _Source,
  ffi.Uint64 _MaxCount,
);

typedef _dart_wcsncat_s = int Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  int _SizeInWords,
  ffi.Pointer<ffi.Uint16> _Source,
  int _MaxCount,
);

typedef _c_wcsncpy_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Uint64 _SizeInWords,
  ffi.Pointer<ffi.Uint16> _Source,
  ffi.Uint64 _MaxCount,
);

typedef _dart_wcsncpy_s = int Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  int _SizeInWords,
  ffi.Pointer<ffi.Uint16> _Source,
  int _MaxCount,
);

typedef _c_wcstok_s = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Uint16> _Delimiter,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Context,
);

typedef _dart_wcstok_s = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Uint16> _Delimiter,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Context,
);

typedef _c__wcsdup = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart__wcsdup = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c_wcscat = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Pointer<ffi.Uint16> _Source,
);

typedef _dart_wcscat = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Pointer<ffi.Uint16> _Source,
);

typedef _c_wcscmp = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
);

typedef _dart_wcscmp = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
);

typedef _c_wcscpy = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Pointer<ffi.Uint16> _Source,
);

typedef _dart_wcscpy = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Pointer<ffi.Uint16> _Source,
);

typedef _c_wcscspn = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Uint16> _Control,
);

typedef _dart_wcscspn = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Uint16> _Control,
);

typedef _c_wcslen = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart_wcslen = int Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c_wcsnlen = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _Source,
  ffi.Uint64 _MaxCount,
);

typedef _dart_wcsnlen = int Function(
  ffi.Pointer<ffi.Uint16> _Source,
  int _MaxCount,
);

typedef _c_wcsncat = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Pointer<ffi.Uint16> _Source,
  ffi.Uint64 _Count,
);

typedef _dart_wcsncat = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Pointer<ffi.Uint16> _Source,
  int _Count,
);

typedef _c_wcsncmp = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  ffi.Uint64 _MaxCount,
);

typedef _dart_wcsncmp = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  int _MaxCount,
);

typedef _c_wcsncpy = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Pointer<ffi.Uint16> _Source,
  ffi.Uint64 _Count,
);

typedef _dart_wcsncpy = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Pointer<ffi.Uint16> _Source,
  int _Count,
);

typedef _c_wcspbrk = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Uint16> _Control,
);

typedef _dart_wcspbrk = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Uint16> _Control,
);

typedef _c_wcsspn = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Uint16> _Control,
);

typedef _dart_wcsspn = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Uint16> _Control,
);

typedef _c_wcstok = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Uint16> _Delimiter,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Context,
);

typedef _dart_wcstok = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<ffi.Uint16> _Delimiter,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Context,
);

typedef _c__wcserror = ffi.Pointer<ffi.Uint16> Function(
  ffi.Int32 _ErrorNumber,
);

typedef _dart__wcserror = ffi.Pointer<ffi.Uint16> Function(
  int _ErrorNumber,
);

typedef _c__wcserror_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _SizeInWords,
  ffi.Int32 _ErrorNumber,
);

typedef _dart__wcserror_s = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _SizeInWords,
  int _ErrorNumber,
);

typedef _c___wcserror = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart___wcserror = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c___wcserror_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _SizeInWords,
  ffi.Pointer<ffi.Uint16> _ErrorMessage,
);

typedef _dart___wcserror_s = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _SizeInWords,
  ffi.Pointer<ffi.Uint16> _ErrorMessage,
);

typedef _c__wcsicmp = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
);

typedef _dart__wcsicmp = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
);

typedef _c__wcsicmp_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcsicmp_l = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wcsnicmp = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  ffi.Uint64 _MaxCount,
);

typedef _dart__wcsnicmp = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  int _MaxCount,
);

typedef _c__wcsnicmp_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  ffi.Uint64 _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcsnicmp_l = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  int _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wcsnset_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Uint64 _SizeInWords,
  ffi.Uint16 _Value,
  ffi.Uint64 _MaxCount,
);

typedef _dart__wcsnset_s = int Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  int _SizeInWords,
  int _Value,
  int _MaxCount,
);

typedef _c__wcsnset = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Uint16 _Value,
  ffi.Uint64 _MaxCount,
);

typedef _dart__wcsnset = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  int _Value,
  int _MaxCount,
);

typedef _c__wcsrev = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart__wcsrev = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c__wcsset_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Uint64 _SizeInWords,
  ffi.Uint16 _Value,
);

typedef _dart__wcsset_s = int Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  int _SizeInWords,
  int _Value,
);

typedef _c__wcsset = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Uint16 _Value,
);

typedef _dart__wcsset = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  int _Value,
);

typedef _c__wcslwr_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Uint64 _SizeInWords,
);

typedef _dart__wcslwr_s = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  int _SizeInWords,
);

typedef _c__wcslwr = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart__wcslwr = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c__wcslwr_s_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Uint64 _SizeInWords,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcslwr_s_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  int _SizeInWords,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wcslwr_l = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcslwr_l = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wcsupr_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Uint64 _Size,
);

typedef _dart__wcsupr_s = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  int _Size,
);

typedef _c__wcsupr = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart__wcsupr = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c__wcsupr_s_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Uint64 _Size,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcsupr_s_l = int Function(
  ffi.Pointer<ffi.Uint16> _String,
  int _Size,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wcsupr_l = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcsupr_l = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wcsxfrm = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Pointer<ffi.Uint16> _Source,
  ffi.Uint64 _MaxCount,
);

typedef _dart_wcsxfrm = int Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Pointer<ffi.Uint16> _Source,
  int _MaxCount,
);

typedef _c__wcsxfrm_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Pointer<ffi.Uint16> _Source,
  ffi.Uint64 _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcsxfrm_l = int Function(
  ffi.Pointer<ffi.Uint16> _Destination,
  ffi.Pointer<ffi.Uint16> _Source,
  int _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wcscoll = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
);

typedef _dart_wcscoll = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
);

typedef _c__wcscoll_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcscoll_l = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wcsicoll = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
);

typedef _dart__wcsicoll = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
);

typedef _c__wcsicoll_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcsicoll_l = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wcsncoll = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  ffi.Uint64 _MaxCount,
);

typedef _dart__wcsncoll = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  int _MaxCount,
);

typedef _c__wcsncoll_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  ffi.Uint64 _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcsncoll_l = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  int _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wcsnicoll = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  ffi.Uint64 _MaxCount,
);

typedef _dart__wcsnicoll = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  int _MaxCount,
);

typedef _c__wcsnicoll_l = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  ffi.Uint64 _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcsnicoll_l = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  int _MaxCount,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c_wcsdup = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart_wcsdup = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c_wcsicmp = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
);

typedef _dart_wcsicmp = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
);

typedef _c_wcsnicmp = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  ffi.Uint64 _MaxCount,
);

typedef _dart_wcsnicmp = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
  int _MaxCount,
);

typedef _c_wcsnset = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Uint16 _Value,
  ffi.Uint64 _MaxCount,
);

typedef _dart_wcsnset = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  int _Value,
  int _MaxCount,
);

typedef _c_wcsrev = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart_wcsrev = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c_wcsset = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  ffi.Uint16 _Value,
);

typedef _dart_wcsset = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
  int _Value,
);

typedef _c_wcslwr = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart_wcslwr = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c_wcsupr = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _dart_wcsupr = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _String,
);

typedef _c_wcsicoll = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
);

typedef _dart_wcsicoll = int Function(
  ffi.Pointer<ffi.Uint16> _String1,
  ffi.Pointer<ffi.Uint16> _String2,
);

typedef _c__wasctime = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<tm> _Tm,
);

typedef _dart__wasctime = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<tm> _Tm,
);

typedef _c__wasctime_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _SizeInWords,
  ffi.Pointer<tm> _Tm,
);

typedef _dart__wasctime_s = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _SizeInWords,
  ffi.Pointer<tm> _Tm,
);

typedef _c_wcsftime = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _SizeInWords,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<tm> _Tm,
);

typedef _dart_wcsftime = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _SizeInWords,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<tm> _Tm,
);

typedef _c__wcsftime_l = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _SizeInWords,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<tm> _Tm,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _dart__wcsftime_l = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _SizeInWords,
  ffi.Pointer<ffi.Uint16> _Format,
  ffi.Pointer<tm> _Tm,
  ffi.Pointer<__crt_locale_pointers> _Locale,
);

typedef _c__wctime32 = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Int64> _Time,
);

typedef _dart__wctime32 = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Int64> _Time,
);

typedef _c__wctime32_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _SizeInWords,
  ffi.Pointer<ffi.Int64> _Time,
);

typedef _dart__wctime32_s = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _SizeInWords,
  ffi.Pointer<ffi.Int64> _Time,
);

typedef _c__wctime64 = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Int64> _Time,
);

typedef _dart__wctime64 = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Int64> _Time,
);

typedef _c__wctime64_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _SizeInWords,
  ffi.Pointer<ffi.Int64> _Time,
);

typedef _dart__wctime64_s = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _SizeInWords,
  ffi.Pointer<ffi.Int64> _Time,
);

typedef _c__wstrdate_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _SizeInWords,
);

typedef _dart__wstrdate_s = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _SizeInWords,
);

typedef _c__wstrdate = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
);

typedef _dart__wstrdate = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
);

typedef _c__wstrtime_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  ffi.Uint64 _SizeInWords,
);

typedef _dart__wstrtime_s = int Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
  int _SizeInWords,
);

typedef _c__wstrtime = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
);

typedef _dart__wstrtime = ffi.Pointer<ffi.Uint16> Function(
  ffi.Pointer<ffi.Uint16> _Buffer,
);

typedef _c__fstat32 = ffi.Int32 Function(
  ffi.Int32 _FileHandle,
  ffi.Pointer<_stat32> _Stat,
);

typedef _dart__fstat32 = int Function(
  int _FileHandle,
  ffi.Pointer<_stat32> _Stat,
);

typedef _c__fstat32i64 = ffi.Int32 Function(
  ffi.Int32 _FileHandle,
  ffi.Pointer<_stat32i64> _Stat,
);

typedef _dart__fstat32i64 = int Function(
  int _FileHandle,
  ffi.Pointer<_stat32i64> _Stat,
);

typedef _c__fstat64i32 = ffi.Int32 Function(
  ffi.Int32 _FileHandle,
  ffi.Pointer<_stat64i32> _Stat,
);

typedef _dart__fstat64i32 = int Function(
  int _FileHandle,
  ffi.Pointer<_stat64i32> _Stat,
);

typedef _c__fstat64 = ffi.Int32 Function(
  ffi.Int32 _FileHandle,
  ffi.Pointer<_stat64> _Stat,
);

typedef _dart__fstat64 = int Function(
  int _FileHandle,
  ffi.Pointer<_stat64> _Stat,
);

typedef _c__stat32_1 = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _FileName,
  ffi.Pointer<_stat32> _Stat,
);

typedef _dart__stat32_1 = int Function(
  ffi.Pointer<ffi.Int8> _FileName,
  ffi.Pointer<_stat32> _Stat,
);

typedef _c__stat32i64_1 = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _FileName,
  ffi.Pointer<_stat32i64> _Stat,
);

typedef _dart__stat32i64_1 = int Function(
  ffi.Pointer<ffi.Int8> _FileName,
  ffi.Pointer<_stat32i64> _Stat,
);

typedef _c__stat64i32_1 = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _FileName,
  ffi.Pointer<_stat64i32> _Stat,
);

typedef _dart__stat64i32_1 = int Function(
  ffi.Pointer<ffi.Int8> _FileName,
  ffi.Pointer<_stat64i32> _Stat,
);

typedef _c__stat64_1 = ffi.Int32 Function(
  ffi.Pointer<ffi.Int8> _FileName,
  ffi.Pointer<_stat64> _Stat,
);

typedef _dart__stat64_1 = int Function(
  ffi.Pointer<ffi.Int8> _FileName,
  ffi.Pointer<_stat64> _Stat,
);

typedef _c__wstat32 = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_stat32> _Stat,
);

typedef _dart__wstat32 = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_stat32> _Stat,
);

typedef _c__wstat32i64 = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_stat32i64> _Stat,
);

typedef _dart__wstat32i64 = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_stat32i64> _Stat,
);

typedef _c__wstat64i32 = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_stat64i32> _Stat,
);

typedef _dart__wstat64i32 = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_stat64i32> _Stat,
);

typedef _c__wstat64 = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_stat64> _Stat,
);

typedef _dart__wstat64 = int Function(
  ffi.Pointer<ffi.Uint16> _FileName,
  ffi.Pointer<_stat64> _Stat,
);

typedef _c__wsetlocale = ffi.Pointer<ffi.Uint16> Function(
  ffi.Int32 _Category,
  ffi.Pointer<ffi.Uint16> _Locale,
);

typedef _dart__wsetlocale = ffi.Pointer<ffi.Uint16> Function(
  int _Category,
  ffi.Pointer<ffi.Uint16> _Locale,
);

typedef _c__wcreate_locale = ffi.Pointer<__crt_locale_pointers> Function(
  ffi.Int32 _Category,
  ffi.Pointer<ffi.Uint16> _Locale,
);

typedef _dart__wcreate_locale = ffi.Pointer<__crt_locale_pointers> Function(
  int _Category,
  ffi.Pointer<ffi.Uint16> _Locale,
);

typedef _c_btowc = ffi.Uint16 Function(
  ffi.Int32 _Ch,
);

typedef _dart_btowc = int Function(
  int _Ch,
);

typedef _c_mbrlen = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _Ch,
  ffi.Uint64 _SizeInBytes,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _dart_mbrlen = int Function(
  ffi.Pointer<ffi.Int8> _Ch,
  int _SizeInBytes,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _c_mbrtowc = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _DstCh,
  ffi.Pointer<ffi.Int8> _SrcCh,
  ffi.Uint64 _SizeInBytes,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _dart_mbrtowc = int Function(
  ffi.Pointer<ffi.Uint16> _DstCh,
  ffi.Pointer<ffi.Int8> _SrcCh,
  int _SizeInBytes,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _c_mbsrtowcs_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> _Retval,
  ffi.Pointer<ffi.Uint16> _Dst,
  ffi.Uint64 _Size,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _PSrc,
  ffi.Uint64 _N,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _dart_mbsrtowcs_s = int Function(
  ffi.Pointer<ffi.Uint64> _Retval,
  ffi.Pointer<ffi.Uint16> _Dst,
  int _Size,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _PSrc,
  int _N,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _c_mbsrtowcs = ffi.Uint64 Function(
  ffi.Pointer<ffi.Uint16> _Dest,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _PSrc,
  ffi.Uint64 _Count,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _dart_mbsrtowcs = int Function(
  ffi.Pointer<ffi.Uint16> _Dest,
  ffi.Pointer<ffi.Pointer<ffi.Int8>> _PSrc,
  int _Count,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _c_wcrtomb_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> _Retval,
  ffi.Pointer<ffi.Int8> _Dst,
  ffi.Uint64 _SizeInBytes,
  ffi.Uint16 _Ch,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _dart_wcrtomb_s = int Function(
  ffi.Pointer<ffi.Uint64> _Retval,
  ffi.Pointer<ffi.Int8> _Dst,
  int _SizeInBytes,
  int _Ch,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _c_wcrtomb = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _Dest,
  ffi.Uint16 _Source,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _dart_wcrtomb = int Function(
  ffi.Pointer<ffi.Int8> _Dest,
  int _Source,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _c_wcsrtombs_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint64> _Retval,
  ffi.Pointer<ffi.Int8> _Dst,
  ffi.Uint64 _SizeInBytes,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Src,
  ffi.Uint64 _Size,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _dart_wcsrtombs_s = int Function(
  ffi.Pointer<ffi.Uint64> _Retval,
  ffi.Pointer<ffi.Int8> _Dst,
  int _SizeInBytes,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _Src,
  int _Size,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _c_wcsrtombs = ffi.Uint64 Function(
  ffi.Pointer<ffi.Int8> _Dest,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _PSource,
  ffi.Uint64 _Count,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _dart_wcsrtombs = int Function(
  ffi.Pointer<ffi.Int8> _Dest,
  ffi.Pointer<ffi.Pointer<ffi.Uint16>> _PSource,
  int _Count,
  ffi.Pointer<_Mbstatet> _State,
);

typedef _c_wctob = ffi.Int32 Function(
  ffi.Uint16 _WCh,
);

typedef _dart_wctob = int Function(
  int _WCh,
);

typedef _c_wmemcpy_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _S1,
  ffi.Uint64 _N1,
  ffi.Pointer<ffi.Uint16> _S2,
  ffi.Uint64 _N,
);

typedef _dart_wmemcpy_s = int Function(
  ffi.Pointer<ffi.Uint16> _S1,
  int _N1,
  ffi.Pointer<ffi.Uint16> _S2,
  int _N,
);

typedef _c_wmemmove_s = ffi.Int32 Function(
  ffi.Pointer<ffi.Uint16> _S1,
  ffi.Uint64 _N1,
  ffi.Pointer<ffi.Uint16> _S2,
  ffi.Uint64 _N,
);

typedef _dart_wmemmove_s = int Function(
  ffi.Pointer<ffi.Uint16> _S1,
  int _N1,
  ffi.Pointer<ffi.Uint16> _S2,
  int _N,
);

typedef _c_Tolk_Load = ffi.Void Function();

typedef _dart_Tolk_Load = void Function();

typedef _c_Tolk_IsLoaded = ffi.Uint8 Function();

typedef _dart_Tolk_IsLoaded = int Function();

typedef _c_Tolk_Unload = ffi.Void Function();

typedef _dart_Tolk_Unload = void Function();

typedef _c_Tolk_TrySAPI = ffi.Void Function(
  ffi.Uint8 trySAPI,
);

typedef _dart_Tolk_TrySAPI = void Function(
  int trySAPI,
);

typedef _c_Tolk_PreferSAPI = ffi.Void Function(
  ffi.Uint8 preferSAPI,
);

typedef _dart_Tolk_PreferSAPI = void Function(
  int preferSAPI,
);

typedef _c_Tolk_DetectScreenReader = ffi.Pointer<ffi.Uint16> Function();

typedef _dart_Tolk_DetectScreenReader = ffi.Pointer<ffi.Uint16> Function();

typedef _c_Tolk_HasSpeech = ffi.Uint8 Function();

typedef _dart_Tolk_HasSpeech = int Function();

typedef _c_Tolk_HasBraille = ffi.Uint8 Function();

typedef _dart_Tolk_HasBraille = int Function();

typedef _c_Tolk_Output = ffi.Uint8 Function(
  ffi.Pointer<ffi.Uint16> str,
  ffi.Uint8 interrupt,
);

typedef _dart_Tolk_Output = int Function(
  ffi.Pointer<ffi.Uint16> str,
  int interrupt,
);

typedef _c_Tolk_Speak = ffi.Uint8 Function(
  ffi.Pointer<ffi.Uint16> str,
  ffi.Uint8 interrupt,
);

typedef _dart_Tolk_Speak = int Function(
  ffi.Pointer<ffi.Uint16> str,
  int interrupt,
);

typedef _c_Tolk_Braille = ffi.Uint8 Function(
  ffi.Pointer<ffi.Uint16> str,
);

typedef _dart_Tolk_Braille = int Function(
  ffi.Pointer<ffi.Uint16> str,
);

typedef _c_Tolk_IsSpeaking = ffi.Uint8 Function();

typedef _dart_Tolk_IsSpeaking = int Function();

typedef _c_Tolk_Silence = ffi.Uint8 Function();

typedef _dart_Tolk_Silence = int Function();
